{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\PPE2\\\\DeuxiemeSituation\\\\backend\\\\src\\\\components\\\\InfosClient.js\";\nimport React from 'react';\nimport client from \"../metier/client\";\n\nclass InfosClient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      update: 0,\n      error: null,\n      listeClients: [],\n      client: new client(null)\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/api/clients\").then(res => res.json()).then(result => {\n      const clients = [];\n      result.forEach(function (client) {\n        clients.push(client);\n      });\n      this.setState({\n        initialized: true,\n        listeClients: clients\n      });\n    }, error => {\n      this.setState({\n        initialized: true,\n        error: error\n      });\n    });\n  }\n\n  update() {\n    this.setState({\n      update: this.state.update + 1\n    });\n  }\n\n  change(propriete, event) {\n    const client = this.state.client;\n    client[propriete] = event.target.value;\n    this.setState({\n      client: client\n    });\n    this.props.onChange(client);\n  }\n\n  selectClient(event) {\n    if (event.nativeEvent.data === undefined) {\n      const options = Array.from(event.target.list.children);\n      options.forEach(option => {\n        if (option.value === event.target.value) {\n          let clientSelect = JSON.parse(option.dataset.client);\n          clientSelect = new client(clientSelect);\n          setTimeout(() => {\n            this.setState({\n              client: clientSelect\n            });\n            this.props.onChange(clientSelect);\n          }, 1000);\n        }\n      });\n    } else {\n      const client = this.state.client;\n      client.nom = event.target.value;\n      this.setState({\n        client: client\n      });\n      this.props.onChange(client);\n    }\n  }\n\n  render() {\n    if (this.state.initialized === false) {\n      return null;\n    } else {\n      const client = this.state.client;\n      const bouton = client.id === \"\" ? \"CREER\" : \"MODIFIER\";\n      return React.createElement(\"section\", {\n        className: \"selectionClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"client\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"CLIENTS\"), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"NOM\"), React.createElement(\"input\", {\n        className: \"zone prenom\",\n        type: \"text\",\n        list: \"listeClient\",\n        value: client.nom,\n        onChange: this.selectClient.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"datalist\", {\n        id: \"listeClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.listeClients.map((client, index) => {\n        return React.createElement(\"option\", {\n          key: index,\n          \"data-client\": JSON.stringify(client),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, client.nom + client.prenom);\n      }))), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"PRENOM\"), React.createElement(\"input\", {\n        className: \"zone prenom\",\n        type: \"text\",\n        value: client.prenom,\n        onChange: this.change.bind(this, \"prenom\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"VILLE\"), React.createElement(\"input\", {\n        className: \"zone ville\",\n        type: \"text\",\n        value: client.ville,\n        onChange: this.change.bind(this, \"ville\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"E-MAIL\"), React.createElement(\"input\", {\n        className: \"zone mail\",\n        type: \"text\",\n        value: client.mail,\n        onChange: this.change.bind(this, \"mail\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"TELEPHONE\"), React.createElement(\"input\", {\n        className: \"zone telephone\",\n        type: \"text\",\n        value: client.tel,\n        onChange: this.change.bind(this, \"tel\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"SOLDE\"), React.createElement(\"input\", {\n        className: \"zone solde\",\n        type: \"text\",\n        value: client.solde,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, bouton), React.createElement(\"button\", {\n        className: \"archiver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"ARCHIVER\"))), React.createElement(\"section\", {\n        className: \"transaction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"TRANSACTIONS\"), React.createElement(\"section\", {\n        className: \"tableau\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"colonne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"h3\", {\n        className: \"colonne bordure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(\"section\", {\n        className: \"ligne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"23/09/2020\"), React.createElement(\"span\", {\n        className: \"montant bordure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"15\\u20AC\")), React.createElement(\"section\", {\n        className: \"ligne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"23/09/2020\"), React.createElement(\"span\", {\n        className: \"montant bordure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"15\\u20AC\")), React.createElement(\"section\", {\n        className: \"ligne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"23/09/2020\"), React.createElement(\"span\", {\n        className: \"montant bordure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"15\\u20AC\")))));\n    }\n  }\n\n}\n\nexport default InfosClient;","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/components/InfosClient.js"],"names":["React","client","InfosClient","Component","constructor","props","state","initialized","update","error","listeClients","componentDidMount","fetch","then","res","json","result","clients","forEach","push","setState","change","propriete","event","target","value","onChange","selectClient","nativeEvent","data","undefined","options","Array","from","list","children","option","clientSelect","JSON","parse","dataset","setTimeout","nom","render","bouton","id","bind","map","index","stringify","prenom","ville","mail","tel","solde"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport client from \"../metier/client\";\r\n\r\nclass InfosClient extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            initialized: false,\r\n            update: 0,\r\n            error: null,\r\n            listeClients: [],\r\n            client: new client(null),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/api/clients\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    const clients = [];\r\n                    result.forEach(function (client) {\r\n                        clients.push(client);\r\n                    });\r\n                    this.setState({\r\n                        initialized: true,\r\n                        listeClients: clients\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        initialized: true,\r\n                        error: error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    update(){\r\n        this.setState({\r\n            update: this.state.update + 1\r\n        })\r\n    }\r\n\r\n    change(propriete, event){\r\n        const client = this.state.client;\r\n        client[propriete] = event.target.value;\r\n        this.setState({\r\n            client: client\r\n        });\r\n        this.props.onChange(client);\r\n    }\r\n\r\n     selectClient(event){\r\n        if (event.nativeEvent.data === undefined){\r\n            const options =  Array.from(event.target.list.children);\r\n            options.forEach((option) => {\r\n                if (option.value === event.target.value){\r\n                    let clientSelect = JSON.parse(option.dataset.client);\r\n                    clientSelect = new client(clientSelect);\r\n                    setTimeout(()=>{\r\n                        this.setState({\r\n                            client: clientSelect\r\n                        });\r\n                        this.props.onChange(clientSelect);\r\n                    },1000);\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            const client = this.state.client;\r\n            client.nom = event.target.value;\r\n            this.setState({\r\n                client: client\r\n            });\r\n            this.props.onChange(client);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.initialized === false){return null}\r\n        else {\r\n            const client = this.state.client;\r\n            const bouton = (client.id === \"\")?\"CREER\":\"MODIFIER\";\r\n            return (\r\n                <section className=\"selectionClient\">\r\n                    <section className=\"client\">\r\n                        <h2 className=\"title\">CLIENTS</h2>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">NOM</legend>\r\n                            <input className=\"zone prenom\"  type=\"text\" list=\"listeClient\" value={client.nom} onChange={this.selectClient.bind(this)}/>\r\n                            <datalist id=\"listeClient\">\r\n                                {this.state.listeClients.map((client, index) => {\r\n                                    return (\r\n                                        <option key={index}  data-client={JSON.stringify(client)}>{client.nom + client.prenom}</option>\r\n                                    )\r\n                                })}\r\n                            </datalist>\r\n                        </div>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">PRENOM</legend>\r\n                            <input className=\"zone prenom\" type=\"text\" value={client.prenom} onChange={this.change.bind(this, \"prenom\")}/>\r\n                        </div>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">VILLE</legend>\r\n                            <input className=\"zone ville\" type=\"text\" value={client.ville} onChange={this.change.bind(this, \"ville\")}/>\r\n                        </div>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">E-MAIL</legend>\r\n                            <input className=\"zone mail\" type=\"text\" value={client.mail} onChange={this.change.bind(this, \"mail\")}/>\r\n                        </div>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">TELEPHONE</legend>\r\n                            <input className=\"zone telephone\" type=\"text\" value={client.tel} onChange={this.change.bind(this, \"tel\")}/>\r\n                        </div>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">SOLDE</legend>\r\n                            <input className=\"zone solde\" type=\"text\" value={client.solde} disabled/>\r\n                        </div>\r\n                        <section className=\"actions\">\r\n                            <button className=\"editer\">{bouton}</button>\r\n                            <button className=\"archiver\">ARCHIVER</button>\r\n                            \r\n                        </section>\r\n                    </section>\r\n                    <section className=\"transaction\">\r\n                        <h2 className=\"title\">TRANSACTIONS</h2>\r\n                        <section className=\"tableau\">\r\n                            <h3 className=\"colonne\">Date</h3>\r\n                            <h3 className=\"colonne bordure\">Montant</h3>\r\n                            <section className=\"ligne\">\r\n                                <span className=\"date\">23/09/2020</span>\r\n                                <span className=\"montant bordure\">15€</span>\r\n                            </section>\r\n                            <section className=\"ligne\">\r\n                                <span className=\"date\">23/09/2020</span>\r\n                                <span className=\"montant bordure\">15€</span>\r\n                            </section>\r\n                            <section className=\"ligne\">\r\n                                <span className=\"date\">23/09/2020</span>\r\n                                <span className=\"montant bordure\">15€</span>\r\n                            </section>\r\n                        </section>\r\n                    </section>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default InfosClient;"]},"metadata":{},"sourceType":"module"}