{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\PPE2\\\\DeuxiemeSituation\\\\backend\\\\src\\\\components\\\\InfosClient.js\";\nimport React from 'react';\nimport client from \"../metier/client\";\n\nclass InfosClient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      update: 0,\n      promiseClients: props.clients,\n      listeClient: [],\n      client: new client(null)\n    };\n  }\n\n  componentDidMount() {\n    const promise = Promise.resolve(this.state.promiseClients);\n    const liste = [];\n  }\n\n  update() {\n    this.setState({\n      update: this.state.update + 1\n    });\n  }\n\n  change(propriete, event) {\n    const client = this.state.client;\n    client[propriete] = event.target.value;\n    this.setState({\n      client: client\n    });\n    this.props.onChange(client);\n  }\n\n  selectClient(event) {\n    if (event.nativeEvent.data === undefined) {\n      const options = Array.from(event.target.list.children);\n      options.forEach(option => {\n        if (option.value === event.target.value) {\n          let clientSelect = JSON.parse(option.dataset.client);\n          console.log(clientSelect);\n          clientSelect = new client(clientSelect);\n          setTimeout(() => {\n            this.setState({\n              client: clientSelect\n            });\n            this.props.onChange(clientSelect);\n          }, 1000);\n        }\n      });\n    } else {\n      const client = this.state.client;\n      client.nom = event.target.value;\n      this.setState({\n        client: client\n      });\n      this.props.onChange(client);\n    }\n  }\n\n  reset() {\n    const c = new client(null);\n    this.setState({\n      client: c\n    });\n    this.props.onChange(c);\n  }\n\n  afficherActions() {\n    if (this.state.client.id !== \"\" && !this.state.client.archive) {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"MODIFIER\"), React.createElement(\"button\", {\n        className: \"archiver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"ARCHIVER\"), React.createElement(\"button\", {\n        className: \"nouveau\",\n        onClick: this.reset.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"NOUVEAU\"));\n    } else if (this.state.client.archive) {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"MODIFIER\"), React.createElement(\"button\", {\n        className: \"desarchiver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"DESARCHIVER\"), React.createElement(\"button\", {\n        className: \"nouveau\",\n        onClick: this.reset.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"NOUVEAU\"));\n    } else {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"CREER\"), React.createElement(\"button\", {\n        className: \"archiver\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"ARCHIVER\"));\n    }\n  }\n\n  render() {\n    if (!this.state.initialized) {\n      return null;\n    } else {\n      const client = this.state.client;\n      return React.createElement(\"section\", {\n        className: \"selectionClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"client\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"CLIENTS\"), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"NOM\"), React.createElement(\"input\", {\n        className: \"zone prenom\",\n        type: \"text\",\n        list: \"listeClient\",\n        value: client.nom,\n        onChange: this.selectClient.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"datalist\", {\n        id: \"listeClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.listeClients.map((client, index) => {\n        return React.createElement(\"option\", {\n          key: index,\n          \"data-client\": JSON.stringify(client),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, client.nom + client.prenom);\n      }))), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"PRENOM\"), React.createElement(\"input\", {\n        className: \"zone prenom\",\n        type: \"text\",\n        value: client.prenom,\n        onChange: this.change.bind(this, \"prenom\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"VILLE\"), React.createElement(\"input\", {\n        className: \"zone ville\",\n        type: \"text\",\n        value: client.ville,\n        onChange: this.change.bind(this, \"ville\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"E-MAIL\"), React.createElement(\"input\", {\n        className: \"zone mail\",\n        type: \"text\",\n        value: client.mail,\n        onChange: this.change.bind(this, \"mail\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"TELEPHONE\"), React.createElement(\"input\", {\n        className: \"zone telephone\",\n        type: \"text\",\n        value: client.tel,\n        onChange: this.change.bind(this, \"tel\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"saisie\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"SOLDE\"), React.createElement(\"input\", {\n        className: \"zone solde\",\n        type: \"text\",\n        value: client.solde,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), this.afficherActions()), React.createElement(\"section\", {\n        className: \"transaction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"TRANSACTIONS\"), React.createElement(\"section\", {\n        className: \"tableau\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"colonne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"h3\", {\n        className: \"colonne bordure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Montant\"), React.createElement(\"section\", {\n        className: \"ligne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"23/09/2020\"), React.createElement(\"span\", {\n        className: \"montant bordure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"15\\u20AC\")), React.createElement(\"section\", {\n        className: \"ligne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"23/09/2020\"), React.createElement(\"span\", {\n        className: \"montant bordure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"15\\u20AC\")), React.createElement(\"section\", {\n        className: \"ligne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"23/09/2020\"), React.createElement(\"span\", {\n        className: \"montant bordure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"15\\u20AC\")))));\n    }\n  }\n\n}\n\nexport default InfosClient;","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/components/InfosClient.js"],"names":["React","client","InfosClient","Component","constructor","props","state","update","promiseClients","clients","listeClient","componentDidMount","promise","Promise","resolve","liste","setState","change","propriete","event","target","value","onChange","selectClient","nativeEvent","data","undefined","options","Array","from","list","children","forEach","option","clientSelect","JSON","parse","dataset","console","log","setTimeout","nom","reset","c","afficherActions","id","archive","bind","render","initialized","listeClients","map","index","stringify","prenom","ville","mail","tel","solde"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport client from \"../metier/client\";\r\n\r\nclass InfosClient extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            update: 0,\r\n            promiseClients: props.clients,\r\n            listeClient: [],\r\n            client: new client(null),\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const promise = Promise.resolve(this.state.promiseClients);\r\n        const liste = [];\r\n\r\n    }\r\n\r\n    update(){\r\n        this.setState({\r\n            update: this.state.update + 1\r\n        })\r\n    }\r\n\r\n    change(propriete, event){\r\n        const client = this.state.client;\r\n        client[propriete] = event.target.value;\r\n        this.setState({\r\n            client: client\r\n        });\r\n        this.props.onChange(client);\r\n    }\r\n\r\n     selectClient(event){\r\n        if (event.nativeEvent.data === undefined){\r\n            const options =  Array.from(event.target.list.children);\r\n            options.forEach((option) => {\r\n                if (option.value === event.target.value){\r\n                    let clientSelect = JSON.parse(option.dataset.client);\r\n                    console.log(clientSelect);\r\n                    clientSelect = new client(clientSelect);\r\n                    setTimeout(()=>{\r\n                        this.setState({\r\n                            client: clientSelect\r\n                        });\r\n                        this.props.onChange(clientSelect);\r\n                    },1000);\r\n                }\r\n            });\r\n        }\r\n        else{\r\n            const client = this.state.client;\r\n            client.nom = event.target.value;\r\n            this.setState({\r\n                client: client\r\n            });\r\n            this.props.onChange(client);\r\n        }\r\n    }\r\n\r\n     reset(){\r\n        const c =  new client(null);\r\n        this.setState({\r\n            client: c\r\n        });\r\n        this.props.onChange(c);\r\n    }\r\n\r\n    afficherActions(){\r\n        if (this.state.client.id !== \"\" && !this.state.client.archive) {\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\">MODIFIER</button>\r\n                    <button className=\"archiver\">ARCHIVER</button>\r\n                    <button className=\"nouveau\" onClick={this.reset.bind(this)}>NOUVEAU</button>\r\n                </section>\r\n            )\r\n        }\r\n        else if(this.state.client.archive){\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\">MODIFIER</button>\r\n                    <button className=\"desarchiver\">DESARCHIVER</button>\r\n                    <button className=\"nouveau\" onClick={this.reset.bind(this)}>NOUVEAU</button>\r\n                </section>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\">CREER</button>\r\n                    <button className=\"archiver\" disabled>ARCHIVER</button>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.initialized) {\r\n            return null\r\n        } else {\r\n\r\n\r\n            const client = this.state.client;\r\n            return (\r\n                <section className=\"selectionClient\">\r\n                    <section className=\"client\">\r\n                        <h2 className=\"title\">CLIENTS</h2>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">NOM</legend>\r\n                            <input className=\"zone prenom\" type=\"text\" list=\"listeClient\" value={client.nom}\r\n                                   onChange={this.selectClient.bind(this)}/>\r\n                            <datalist id=\"listeClient\">\r\n                                {this.state.listeClients.map((client, index) => {\r\n                                    return (\r\n                                        <option key={index}\r\n                                                data-client={JSON.stringify(client)}>{client.nom + client.prenom}</option>\r\n                                    )\r\n                                })}\r\n                            </datalist>\r\n                        </div>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">PRENOM</legend>\r\n                            <input className=\"zone prenom\" type=\"text\" value={client.prenom}\r\n                                   onChange={this.change.bind(this, \"prenom\")}/>\r\n                        </div>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">VILLE</legend>\r\n                            <input className=\"zone ville\" type=\"text\" value={client.ville}\r\n                                   onChange={this.change.bind(this, \"ville\")}/>\r\n                        </div>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">E-MAIL</legend>\r\n                            <input className=\"zone mail\" type=\"text\" value={client.mail}\r\n                                   onChange={this.change.bind(this, \"mail\")}/>\r\n                        </div>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">TELEPHONE</legend>\r\n                            <input className=\"zone telephone\" type=\"text\" value={client.tel}\r\n                                   onChange={this.change.bind(this, \"tel\")}/>\r\n                        </div>\r\n                        <div className=\"saisie\">\r\n                            <legend className=\"description\">SOLDE</legend>\r\n                            <input className=\"zone solde\" type=\"text\" value={client.solde} disabled/>\r\n                        </div>\r\n                        {this.afficherActions()}\r\n                    </section>\r\n                    <section className=\"transaction\">\r\n                        <h2 className=\"title\">TRANSACTIONS</h2>\r\n                        <section className=\"tableau\">\r\n                            <h3 className=\"colonne\">Date</h3>\r\n                            <h3 className=\"colonne bordure\">Montant</h3>\r\n                            <section className=\"ligne\">\r\n                                <span className=\"date\">23/09/2020</span>\r\n                                <span className=\"montant bordure\">15€</span>\r\n                            </section>\r\n                            <section className=\"ligne\">\r\n                                <span className=\"date\">23/09/2020</span>\r\n                                <span className=\"montant bordure\">15€</span>\r\n                            </section>\r\n                            <section className=\"ligne\">\r\n                                <span className=\"date\">23/09/2020</span>\r\n                                <span className=\"montant bordure\">15€</span>\r\n                            </section>\r\n                        </section>\r\n                    </section>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default InfosClient;"]},"metadata":{},"sourceType":"module"}