{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\PPE2\\\\DeuxiemeSituation\\\\backend\\\\src\\\\components\\\\InfosClient.js\";\nimport React from 'react';\nimport client from \"../metier/client\";\nimport Dbal from \"../modele/dbal\";\nconst d = new Dbal();\n\nclass InfosClient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      update: 0,\n      listeClients: props.clients,\n      client: new client(null)\n    };\n  }\n\n  update() {\n    this.setState({\n      update: this.state.update + 1\n    });\n  }\n\n  change(propriete, event) {\n    const client = this.state.client;\n    client[propriete] = event.target.value;\n    this.setState({\n      client: client\n    });\n    this.props.onChange(client);\n  }\n\n  selectClient(event) {\n    //Indique si l'on a séléctionne le client\n    const self = this;\n\n    if (event.nativeEvent.data === undefined) {\n      const options = Array.from(event.target.list.children);\n      options.forEach(async option => {\n        if (option.value === event.target.value) {\n          const c = self.loadClient(JSON.parse(option.dataset.client).id);\n          let response = await d.get(\"http://localhost:8080\" + c.ville);\n          c.ville = JSON.parse(response).nom;\n          response = await d.get(\"http://localhost:8080/api/client/soldeById/\" + c.id);\n          c.solde = JSON.parse(response);\n          this.setState({\n            client: new client(c)\n          });\n          this.props.onChange(new client(c));\n        }\n      }); //Ou si l'on change son nom\n    } else {\n      const client = this.state.client;\n      client.nom = event.target.value;\n      this.setState({\n        client: client\n      });\n      this.props.onChange(client);\n    }\n  }\n\n  async loadClient(id) {}\n\n  reset() {\n    const c = new client(null);\n    this.setState({\n      client: c\n    });\n    this.props.onChange(c);\n  }\n\n  async archiver(archive) {\n    const client = this.state.client;\n    client.archive = archive !== \"0\";\n    const url = \"http://localhost:8080/api/client/modifClient/\" + client.id + \"/,/,/,/,/,/\" + archive;\n    d.put(url);\n    this.setState({\n      client: client\n    });\n  }\n\n  async modifier() {\n    const client = this.state.client;\n    const archive = !client.archive ? \"0\" : \"1\";\n    const mail = client.mail.replace(\".\", \",\");\n    const url = \"http://localhost:8080/api/client/modifClient/\" + client.id + \"/\" + client.nom + \"/\" + client.prenom + \"/\" + client.ville + \"/\" + client.tel + \"/\" + mail + \"/\" + archive;\n    d.put(url);\n    this.update();\n  }\n\n  async creer() {\n    let client = this.state.client;\n    const mail = client.mail.replace(\".\", \",\");\n    const aujourdhui = d.date2amd(new Date());\n    const ville = client.ville;\n    let url = \"http://localhost:8080/api/client/addClient/\" + client.nom + \"/\" + client.prenom + \"/\" + ville + \"/\" + client.tel + \"/\" + mail + \"/0\";\n    let response = await d.post(url);\n    const lastId = JSON.parse(response);\n    url = \"http://localhost:8080/api/clients/\" + lastId;\n    response = await d.get(url);\n    client = JSON.parse(response);\n    client.ville = ville;\n    client.solde = 0.00;\n    url = \"http://localhost:8080/api/transaction/addTransaction/\" + aujourdhui + \"/0,00/Carte bancaire/ /Creation du compte/ /\" + client.id;\n    await d.post(url);\n    this.setState({\n      client: client\n    });\n  }\n\n  afficherActions() {\n    if (this.state.client.id !== \"\" && !this.state.client.archive) {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        onClick: this.modifier.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"MODIFIER\"), React.createElement(\"button\", {\n        className: \"archiver\",\n        onClick: this.archiver.bind(this, \"1\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"ARCHIVER\"), React.createElement(\"button\", {\n        className: \"nouveau\",\n        onClick: this.reset.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"NOUVEAU\"));\n    } else if (this.state.client.id !== \"\") {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        onClick: this.modifier.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"MODIFIER\"), React.createElement(\"button\", {\n        className: \"desarchiver\",\n        onClick: this.archiver.bind(this, \"0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"DESARCHIVER\"), React.createElement(\"button\", {\n        className: \"nouveau\",\n        onClick: this.reset.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"NOUVEAU\"));\n    } else {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        onClick: this.creer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"CREER\"), React.createElement(\"button\", {\n        className: \"archiver\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"ARCHIVER\"));\n    }\n  }\n\n  render() {\n    const client = this.state.client;\n    return React.createElement(\"section\", {\n      className: \"selectionClient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"client\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"CLIENTS\"), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"NOM\"), React.createElement(\"input\", {\n      className: \"zone prenom\",\n      type: \"text\",\n      list: \"listeClient\",\n      value: client.nom,\n      onChange: this.selectClient.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"datalist\", {\n      id: \"listeClient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.listeClients.map((client, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        \"data-client\": JSON.stringify(client),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, client.nom + client.prenom);\n    }))), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"PRENOM\"), React.createElement(\"input\", {\n      className: \"zone prenom\",\n      type: \"text\",\n      value: client.prenom,\n      onChange: this.change.bind(this, \"prenom\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"VILLE\"), React.createElement(\"input\", {\n      className: \"zone ville\",\n      type: \"text\",\n      value: client.ville,\n      onChange: this.change.bind(this, \"ville\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"E-MAIL\"), React.createElement(\"input\", {\n      className: \"zone mail\",\n      type: \"text\",\n      value: client.mail,\n      onChange: this.change.bind(this, \"mail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"TELEPHONE\"), React.createElement(\"input\", {\n      className: \"zone telephone\",\n      type: \"text\",\n      value: client.tel,\n      onChange: this.change.bind(this, \"tel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"SOLDE\"), React.createElement(\"input\", {\n      className: \"zone solde\",\n      type: \"text\",\n      value: client.solde,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), this.afficherActions()));\n  }\n\n}\n\nexport default InfosClient;","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/components/InfosClient.js"],"names":["React","client","Dbal","d","InfosClient","Component","constructor","props","state","update","listeClients","clients","setState","change","propriete","event","target","value","onChange","selectClient","self","nativeEvent","data","undefined","options","Array","from","list","children","forEach","option","c","loadClient","JSON","parse","dataset","id","response","get","ville","nom","solde","reset","archiver","archive","url","put","modifier","mail","replace","prenom","tel","creer","aujourdhui","date2amd","Date","post","lastId","afficherActions","bind","render","map","index","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport client from \"../metier/client\";\r\nimport Dbal from \"../modele/dbal\";\r\n\r\nconst d = new Dbal();\r\n\r\nclass InfosClient extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            update: 0,\r\n            listeClients: props.clients,\r\n            client: new client(null),\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.setState({\r\n            update: this.state.update + 1\r\n        })\r\n    }\r\n\r\n    change(propriete, event) {\r\n        const client = this.state.client;\r\n        client[propriete] = event.target.value;\r\n        this.setState({\r\n            client: client\r\n        });\r\n        this.props.onChange(client);\r\n    }\r\n\r\n    selectClient(event) {\r\n        //Indique si l'on a séléctionne le client\r\n        const self = this;\r\n        if (event.nativeEvent.data === undefined) {\r\n            const options = Array.from(event.target.list.children);\r\n            options.forEach(async (option) => {\r\n                if (option.value === event.target.value) {\r\n                    const c =  self.loadClient((JSON.parse(option.dataset.client)).id);\r\n                    let response = await d.get(\"http://localhost:8080\" + c.ville);\r\n                    c.ville = (JSON.parse(response)).nom;\r\n                    response = await d.get(\"http://localhost:8080/api/client/soldeById/\" + c.id);\r\n                    c.solde = JSON.parse(response);\r\n                    this.setState({client: new client(c)});\r\n                    this.props.onChange(new client(c));\r\n                }\r\n            });\r\n        //Ou si l'on change son nom\r\n        } else {\r\n            const client = this.state.client;\r\n            client.nom = event.target.value;\r\n            this.setState({\r\n                client: client\r\n            });\r\n            this.props.onChange(client);\r\n        }\r\n    }\r\n\r\n    async loadClient(id){\r\n\r\n    }\r\n\r\n    reset() {\r\n        const c = new client(null);\r\n        this.setState({\r\n            client: c\r\n        });\r\n        this.props.onChange(c);\r\n    }\r\n\r\n    async archiver(archive){\r\n        const client = this.state.client;\r\n        client.archive = (archive !== \"0\");\r\n        const url = \"http://localhost:8080/api/client/modifClient/\"+ client.id + \"/,/,/,/,/,/\" + archive;\r\n        d.put(url);\r\n        this.setState({\r\n            client: client\r\n        })\r\n    }\r\n\r\n    async modifier(){\r\n        const client = this.state.client;\r\n        const archive = (!client.archive)?\"0\":\"1\";\r\n        const mail = client.mail.replace(\".\", \",\");\r\n        const url = \"http://localhost:8080/api/client/modifClient/\"+ client.id + \"/\"\r\n            + client.nom + \"/\"\r\n            + client.prenom + \"/\"\r\n            + client.ville + \"/\"\r\n            + client.tel + \"/\"\r\n            + mail + \"/\"\r\n            + archive;\r\n        d.put(url);\r\n        this.update();\r\n    }\r\n\r\n    async creer(){\r\n        let client = this.state.client;\r\n        const mail = client.mail.replace(\".\", \",\");\r\n        const aujourdhui = d.date2amd(new Date());\r\n        const ville = client.ville;\r\n        let url = \"http://localhost:8080/api/client/addClient/\"\r\n            + client.nom + \"/\"\r\n            + client.prenom + \"/\"\r\n            + ville + \"/\"\r\n            + client.tel + \"/\"\r\n            + mail + \"/0\";\r\n        let response = await d.post(url);\r\n        const lastId = JSON.parse(response);\r\n        url = \"http://localhost:8080/api/clients/\" + lastId;\r\n        response = await d.get(url);\r\n        client = JSON.parse(response);\r\n        client.ville = ville;\r\n        client.solde = 0.00;\r\n        url = \"http://localhost:8080/api/transaction/addTransaction/\" + aujourdhui + \"/0,00/Carte bancaire/ /Creation du compte/ /\" + client.id;\r\n        await d.post(url);\r\n        this.setState({\r\n            client: client\r\n        })\r\n    }\r\n\r\n    afficherActions() {\r\n        if (this.state.client.id !== \"\" && !this.state.client.archive) {\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\" onClick={this.modifier.bind(this)}>MODIFIER</button>\r\n                    <button className=\"archiver\" onClick={this.archiver.bind(this,\"1\")}>ARCHIVER</button>\r\n                    <button className=\"nouveau\" onClick={this.reset.bind(this)}>NOUVEAU</button>\r\n                </section>\r\n            )\r\n        } else if (this.state.client.id !== \"\") {\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\" onClick={this.modifier.bind(this)}>MODIFIER</button>\r\n                    <button className=\"desarchiver\" onClick={this.archiver.bind(this,\"0\")}>DESARCHIVER</button>\r\n                    <button className=\"nouveau\" onClick={this.reset.bind(this)}>NOUVEAU</button>\r\n                </section>\r\n            )\r\n        } else {\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\" onClick={this.creer.bind(this)}>CREER</button>\r\n                    <button className=\"archiver\" disabled>ARCHIVER</button>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const client = this.state.client;\r\n        return (\r\n            <section className=\"selectionClient\">\r\n                <section className=\"client\">\r\n                    <h2 className=\"title\">CLIENTS</h2>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">NOM</legend>\r\n                        <input className=\"zone prenom\" type=\"text\" list=\"listeClient\" value={client.nom}\r\n                               onChange={this.selectClient.bind(this)}/>\r\n                        <datalist id=\"listeClient\">\r\n                            {this.state.listeClients.map((client, index) => {\r\n                                return (\r\n                                    <option key={index}\r\n                                            data-client={JSON.stringify(client)}>{client.nom + client.prenom}</option>\r\n                                )\r\n                            })}\r\n                        </datalist>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">PRENOM</legend>\r\n                        <input className=\"zone prenom\" type=\"text\" value={client.prenom}\r\n                               onChange={this.change.bind(this, \"prenom\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">VILLE</legend>\r\n                        <input className=\"zone ville\" type=\"text\" value={client.ville}\r\n                               onChange={this.change.bind(this, \"ville\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">E-MAIL</legend>\r\n                        <input className=\"zone mail\" type=\"text\" value={client.mail}\r\n                               onChange={this.change.bind(this, \"mail\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">TELEPHONE</legend>\r\n                        <input className=\"zone telephone\" type=\"text\" value={client.tel}\r\n                               onChange={this.change.bind(this, \"tel\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">SOLDE</legend>\r\n                        <input className=\"zone solde\" type=\"text\" value={client.solde} disabled/>\r\n                    </div>\r\n                    {this.afficherActions()}\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfosClient;"]},"metadata":{},"sourceType":"module"}