{"ast":null,"code":"export default class Dbal {\n  constructor() {\n    if (!!Dbal.instance) {\n      return Dbal.instance;\n    }\n\n    Dbal.instance = this;\n    return this;\n  }\n\n  get(url) {\n    return new Promise((resolve, reject) => {\n      const xhr = new window.XMLHttpRequest();\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          resolve(xhr.responseText);\n        } else {\n          reject(\"a\", xhr);\n        }\n      };\n\n      xhr.open('GET', url, true);\n      xhr.send();\n    });\n  }\n\n}\n/**\r\n *             fetch(\"http://localhost:8080/api/clients\")\r\n .then(res => res.json())\r\n .then(\r\n async (result) => {\r\n                        const create = result.map((c)=> {\r\n                            clients.push(new client(c));\r\n                        });\r\n                        return await Promise.all(create);\r\n                    },\r\n (error) => {console.log(error);}\r\n );\r\n **/","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/modele/dbal.js"],"names":["Dbal","constructor","instance","get","url","Promise","resolve","reject","xhr","window","XMLHttpRequest","onreadystatechange","readyState","responseText","open","send"],"mappings":"AAAA,eAAe,MAAMA,IAAN,CAAW;AACtBC,EAAAA,WAAW,GAAG;AACV,QAAI,CAAC,CAACD,IAAI,CAACE,QAAX,EAAqB;AACjB,aAAOF,IAAI,CAACE,QAAZ;AACH;;AACDF,IAAAA,IAAI,CAACE,QAAL,GAAgB,IAAhB;AAEA,WAAO,IAAP;AACH;;AAEDC,EAAAA,GAAG,CAACC,GAAD,EAAK;AACJ,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClC,YAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,cAAX,EAAZ;;AACAF,MAAAA,GAAG,CAACG,kBAAJ,GAAyB,MAAI;AACzB,YAAIH,GAAG,CAACI,UAAJ,KAAmB,CAAvB,EAAyB;AACrBN,UAAAA,OAAO,CAACE,GAAG,CAACK,YAAL,CAAP;AACH,SAFD,MAEM;AACFN,UAAAA,MAAM,CAAC,GAAD,EAAKC,GAAL,CAAN;AACH;AACJ,OAND;;AAOAA,MAAAA,GAAG,CAACM,IAAJ,CAAS,KAAT,EAAgBV,GAAhB,EAAqB,IAArB;AACAI,MAAAA,GAAG,CAACO,IAAJ;AACH,KAXM,CAAP;AAYH;;AAvBqB;AA0B1B","sourcesContent":["export default class Dbal {\r\n    constructor() {\r\n        if (!!Dbal.instance) {\r\n            return Dbal.instance;\r\n        }\r\n        Dbal.instance = this;\r\n\r\n        return this;\r\n    }\r\n\r\n    get(url){\r\n        return new Promise((resolve, reject)=>{\r\n            const xhr = new window.XMLHttpRequest();\r\n            xhr.onreadystatechange = ()=>{\r\n                if (xhr.readyState === 4){\r\n                    resolve(xhr.responseText)\r\n                } else{\r\n                    reject(\"a\",xhr);\r\n                }\r\n            };\r\n            xhr.open('GET', url, true);\r\n            xhr.send()\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n *             fetch(\"http://localhost:8080/api/clients\")\r\n .then(res => res.json())\r\n .then(\r\n async (result) => {\r\n                        const create = result.map((c)=> {\r\n                            clients.push(new client(c));\r\n                        });\r\n                        return await Promise.all(create);\r\n                    },\r\n (error) => {console.log(error);}\r\n );\r\n **/"]},"metadata":{},"sourceType":"module"}