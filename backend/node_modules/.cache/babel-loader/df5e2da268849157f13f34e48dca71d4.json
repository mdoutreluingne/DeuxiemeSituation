{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\PPE2\\\\DeuxiemeSituation\\\\backend\\\\src\\\\components\\\\Page.js\";\nimport React from 'react';\nimport InfosClient from './InfosClient';\nimport Transactions from './Transactions';\nimport client from \"../metier/client\";\nimport Transaction from \"../metier/Transaction\";\nimport Credits from \"./Credits\";\nimport Dbal from \"../modele/dbal\";\nexport default class Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      update: 0,\n      initialized: false,\n      liste_clients: props.clients,\n      client: new client(null),\n      transactions: []\n    };\n  }\n\n  update() {\n    this.setState({\n      update: this.state.update + 1\n    });\n  }\n\n  async componentDidMount() {\n    const d = new Dbal();\n    const liste = [];\n    let response = await d.get(\"http://localhost:8080/api/clients\");\n    const clients = JSON.parse(response);\n\n    for (const c of clients) {\n      liste.push(new client(c));\n    }\n\n    this.setState({\n      initialized: true,\n      liste_clients: liste\n    });\n  }\n\n  async changeClient(client) {\n    const list = [];\n\n    if (client.id !== \"\") {\n      const d = new Dbal();\n      const response = await d.get(\"http://localhost:8080/api/transaction/byIdClient/\" + client.id);\n      const transactions = JSON.parse(response);\n      transactions.forEach(t => {\n        list.push(new Transaction(t));\n      });\n    }\n\n    this.setState({\n      client: client,\n      transactions: list\n    });\n  }\n\n  afficherDonnees() {\n    if (this.state.client.id !== \"\") {\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Transactions, {\n        transactions: this.state.transactions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Credits, {\n        client: this.state.client,\n        onAdd: this.update.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }\n\n  render() {\n    if (!this.state.initialized) {\n      return null;\n    } else {\n      const client = this.state.client;\n      return React.createElement(\"section\", {\n        className: \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"entete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Comptabilit\\xE9\"), React.createElement(\"h3\", {\n        className: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Client\"), React.createElement(\"h3\", {\n        className: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Transactions\"), React.createElement(\"h3\", {\n        className: \"nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Cr\\xE9dits\")), React.createElement(\"section\", {\n        className: \"stickClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, client.nom), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, client.prenom), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, client.mail))), React.createElement(\"section\", {\n        className: \"corps\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(InfosClient, {\n        clients: this.state.liste_clients,\n        onChange: this.changeClient.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), this.afficherDonnees()));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/components/Page.js"],"names":["React","InfosClient","Transactions","client","Transaction","Credits","Dbal","Page","Component","constructor","props","state","update","initialized","liste_clients","clients","transactions","setState","componentDidMount","d","liste","response","get","JSON","parse","c","push","changeClient","list","id","forEach","t","afficherDonnees","bind","render","nom","prenom","mail"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport InfosClient from './InfosClient';\r\nimport Transactions from './Transactions';\r\nimport client from \"../metier/client\";\r\nimport Transaction from \"../metier/Transaction\";\r\nimport Credits from \"./Credits\";\r\nimport Dbal from \"../modele/dbal\";\r\n\r\nexport default class Page extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            update: 0,\r\n            initialized: false,\r\n            liste_clients: props.clients,\r\n            client: new client(null),\r\n            transactions: [],\r\n        }\r\n    }\r\n\r\n    update(){\r\n        this.setState({\r\n            update: this.state.update +1\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const d = new Dbal();\r\n        const liste =  [];\r\n        let response = await d.get(\"http://localhost:8080/api/clients\");\r\n        const clients = JSON.parse(response);\r\n        for (const c of clients) {\r\n            liste.push(new client(c));\r\n        }\r\n        this.setState({\r\n            initialized: true,\r\n            liste_clients: liste\r\n        })\r\n    }\r\n\r\n    async changeClient(client){\r\n        const list = [];\r\n        if (client.id !== \"\"){\r\n            const d = new Dbal();\r\n            const response = await d.get(\"http://localhost:8080/api/transaction/byIdClient/\" + client.id);\r\n            const transactions = (JSON.parse(response));\r\n            transactions.forEach((t)=>{\r\n                list.push(new Transaction(t))\r\n            });\r\n        }\r\n        this.setState({\r\n            client: client,\r\n            transactions: list,\r\n        });\r\n    }\r\n\r\n    afficherDonnees(){\r\n        if (this.state.client.id !== \"\"){\r\n            return(\r\n                <section>\r\n                    <Transactions transactions={this.state.transactions}/>\r\n                    <Credits client={this.state.client} onAdd={this.update.bind(this)}/>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.initialized) {\r\n            return null\r\n        } else {\r\n            const client = this.state.client;\r\n            return (\r\n                <section className=\"page\">\r\n                    <section className=\"entete\">\r\n                        <section className=\"navigation\">\r\n                            <h2 className=\"title\">Comptabilité</h2>\r\n                            <h3 className=\"nav\">Client</h3>\r\n                            <h3 className=\"nav\">Transactions</h3>\r\n                            <h3 className=\"nav\">Crédits</h3>\r\n                        </section>\r\n                        <section className=\"stickClient\">\r\n                            <h3>{client.nom}</h3>\r\n                            <h3>{client.prenom}</h3>\r\n                            <h3>{client.mail}</h3>\r\n                        </section>\r\n                    </section>\r\n                    <section className=\"corps\">\r\n                        <InfosClient clients={this.state.liste_clients} onChange={this.changeClient.bind(this)}/>\r\n                        {this.afficherDonnees()}\r\n                    </section>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}