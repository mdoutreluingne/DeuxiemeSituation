{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\PPE2\\\\DeuxiemeSituation\\\\backend\\\\src\\\\components\\\\InfosClient.js\";\nimport React from 'react';\nimport DataList from \"./DataList\";\nimport client from \"../metier/client\";\n\nclass InfosClient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialized: false,\n      error: null,\n      listeClients: [],\n      client: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/api/clients\").then(res => res.json()).then(result => {\n      const clients = [];\n      result.forEach(function (client) {\n        clients.push(client);\n      });\n      this.setState({\n        initialized: true,\n        listeClients: clients\n      });\n    }, error => {\n      this.setState({\n        initialized: true,\n        error: error\n      });\n    });\n  }\n\n  change(propriete, event) {\n    console.log(nom);\n  }\n\n  button(nom) {\n    return React.createElement(\"button\", {\n      onClick: this.change.bind(this, nom),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"nom\");\n  }\n\n  selectClient(client) {\n    this.setState({\n      clientSelect: new client(client)\n    });\n  }\n\n  render() {\n    if (this.state.initialized === false) {\n      return null;\n    } else {\n      const client = this.state.clientSelect;\n      return React.createElement(\"section\", {\n        className: \"client\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(DataList, {\n        options: this.state.listeClients,\n        onSelectOption: this.selectClient.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        value: client !== null ? client.prenom : \"\",\n        onChange: this.change.bind(this, \"nom\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default InfosClient;","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/components/InfosClient.js"],"names":["React","DataList","client","InfosClient","Component","constructor","props","state","initialized","error","listeClients","componentDidMount","fetch","then","res","json","result","clients","forEach","push","setState","change","propriete","event","console","log","nom","button","bind","selectClient","clientSelect","render","prenom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,KADJ;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITR,MAAAA,MAAM,EAAE;AAJC,KAAb;AAMH;;AAEDS,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACR,YAAMC,OAAO,GAAG,EAAhB;AACAD,MAAAA,MAAM,CAACE,OAAP,CAAe,UAAUhB,MAAV,EAAkB;AAC7Be,QAAAA,OAAO,CAACE,IAAR,CAAajB,MAAb;AACH,OAFD;AAGA,WAAKkB,QAAL,CAAc;AACVZ,QAAAA,WAAW,EAAE,IADH;AAEVE,QAAAA,YAAY,EAAEO;AAFJ,OAAd;AAIH,KAZT,EAaSR,KAAD,IAAW;AACP,WAAKW,QAAL,CAAc;AACVZ,QAAAA,WAAW,EAAE,IADH;AAEVC,QAAAA,KAAK,EAAEA;AAFG,OAAd;AAIH,KAlBT;AAoBH;;AAEDY,EAAAA,MAAM,CAACC,SAAD,EAAYC,KAAZ,EAAkB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;;AAEDC,EAAAA,MAAM,CAACD,GAAD,EAAK;AACP,WACI;AAAQ,MAAA,OAAO,EAAE,KAAKL,MAAL,CAAYO,IAAZ,CAAiB,IAAjB,EAAuBF,GAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH;;AAEDG,EAAAA,YAAY,CAAC3B,MAAD,EAAQ;AAChB,SAAKkB,QAAL,CAAc;AACVU,MAAAA,YAAY,EAAE,IAAI5B,MAAJ,CAAWA,MAAX;AADJ,KAAd;AAGH;;AAED6B,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKxB,KAAL,CAAWC,WAAX,KAA2B,KAA9B,EAAoC;AAAC,aAAO,IAAP;AAAY,KAAjD,MACK;AACD,YAAMN,MAAM,GAAG,KAAKK,KAAL,CAAWuB,YAA1B;AACA,aACI;AAAS,QAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWG,YAA9B;AAA4C,QAAA,cAAc,EAAE,KAAKmB,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAG1B,MAAM,KAAK,IAAZ,GAAkBA,MAAM,CAAC8B,MAAzB,GAAgC,EAA1D;AAA8D,QAAA,QAAQ,EAAE,KAAKX,MAAL,CAAYO,IAAZ,CAAiB,IAAjB,EAAuB,KAAvB,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;AACJ;;AA7DqC;;AAgE1C,eAAezB,WAAf","sourcesContent":["import React from 'react';\r\nimport DataList from \"./DataList\";\r\nimport client from \"../metier/client\";\r\n\r\nclass InfosClient extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            initialized: false,\r\n            error: null,\r\n            listeClients: [],\r\n            client: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/api/clients\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    const clients = [];\r\n                    result.forEach(function (client) {\r\n                        clients.push(client);\r\n                    });\r\n                    this.setState({\r\n                        initialized: true,\r\n                        listeClients: clients\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        initialized: true,\r\n                        error: error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    change(propriete, event){\r\n        console.log(nom);\r\n    }\r\n\r\n    button(nom){\r\n        return(\r\n            <button onClick={this.change.bind(this, nom)}>nom</button>\r\n        )\r\n    }\r\n\r\n    selectClient(client){\r\n        this.setState({\r\n            clientSelect: new client(client)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.initialized === false){return null}\r\n        else {\r\n            const client = this.state.clientSelect;\r\n            return (\r\n                <section className=\"client\">\r\n                    <DataList options={this.state.listeClients} onSelectOption={this.selectClient.bind(this)}/>\r\n                    <input type=\"text\" value={(client !== null)?client.prenom:\"\"} onChange={this.change.bind(this, \"nom\")}/>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default InfosClient;"]},"metadata":{},"sourceType":"module"}