{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\PPE2\\\\DeuxiemeSituation\\\\backend\\\\src\\\\components\\\\Page.js\";\nimport React from 'react';\nimport DaoClient from \"../modele/DaoClient\";\nimport DaoTransaction from \"../modele/DaoTransaction\";\nimport client from \"../metier/Client\";\nimport InfosClient from './InfosClient';\nimport Transactions from './Transactions';\nimport Credits from \"./Credits\";\n/**\r\n * Page principale qui appelle les composants\r\n */\n\nexport default class Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      /**@type {boolean}**/\n      initialized: false,\n\n      /**@type {[Client]}**/\n      liste_clients: props.clients,\n\n      /**@type {Client}**/\n      client: new client(null),\n\n      /**@type {[Transaction]}**/\n      transactions: []\n    };\n  }\n  /**\r\n   * Récupère la liste des clients\r\n   * @returns {Promise<void>}\r\n   */\n\n\n  async componentDidMount() {\n    const liste = await new DaoClient().getAll();\n    this.setState({\n      initialized: true,\n      liste_clients: liste\n    });\n  }\n  /**\r\n   * Charge les infos du client séléctionné\r\n   * @param client\r\n   * @returns {Promise<void>}\r\n   */\n\n\n  async changeClient(client) {\n    let list = [];\n\n    if (client.id !== \"\") {\n      list = await new DaoTransaction().getAllByClientId(client.id);\n    }\n\n    this.setState({\n      client: client,\n      transactions: list\n    });\n  }\n  /**\r\n   * Affiche les transactions et l'ajout de crédit du client\r\n   * @link {Transactions}\r\n   * @link {Credits}\r\n   * @returns {*}\r\n   */\n\n\n  afficherDonnees() {\n    if (this.state.client.id !== \"\") {\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Transactions, {\n        client: this.state.client,\n        transactions: this.state.transactions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Credits, {\n        client: this.state.client,\n        onAdd: this.changeClient.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    }\n  }\n\n  render() {\n    if (!this.state.initialized) {\n      return null;\n    } else {\n      const client = this.state.client;\n      return React.createElement(\"section\", {\n        className: \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"entete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Comptabilit\\xE9\")), React.createElement(\"section\", {\n        className: \"stickClient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, client.nom), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, client.prenom), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, client.mail))), React.createElement(\"section\", {\n        className: \"corps\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(InfosClient, {\n        clients: this.state.liste_clients,\n        onChange: this.changeClient.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), this.afficherDonnees()));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/components/Page.js"],"names":["React","DaoClient","DaoTransaction","client","InfosClient","Transactions","Credits","Page","Component","constructor","props","state","initialized","liste_clients","clients","transactions","componentDidMount","liste","getAll","setState","changeClient","list","id","getAllByClientId","afficherDonnees","bind","render","nom","prenom","mail"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport DaoClient from \"../modele/DaoClient\";\r\nimport DaoTransaction from \"../modele/DaoTransaction\";\r\n\r\nimport client from \"../metier/Client\";\r\n\r\nimport InfosClient from './InfosClient';\r\nimport Transactions from './Transactions';\r\nimport Credits from \"./Credits\";\r\n\r\n/**\r\n * Page principale qui appelle les composants\r\n */\r\nexport default class Page extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            /**@type {boolean}**/\r\n            initialized: false,\r\n            /**@type {[Client]}**/\r\n            liste_clients: props.clients,\r\n            /**@type {Client}**/\r\n            client: new client(null),\r\n            /**@type {[Transaction]}**/\r\n            transactions: [],\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Récupère la liste des clients\r\n     * @returns {Promise<void>}\r\n     */\r\n    async componentDidMount() {\r\n        const liste = await new DaoClient().getAll();\r\n        this.setState({\r\n            initialized: true,\r\n            liste_clients: liste\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Charge les infos du client séléctionné\r\n     * @param client\r\n     * @returns {Promise<void>}\r\n     */\r\n    async changeClient(client){\r\n        let list = [];\r\n        if (client.id !== \"\"){\r\n            list = await new DaoTransaction().getAllByClientId(client.id);\r\n        }\r\n        this.setState({\r\n            client: client,\r\n            transactions: list,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Affiche les transactions et l'ajout de crédit du client\r\n     * @link {Transactions}\r\n     * @link {Credits}\r\n     * @returns {*}\r\n     */\r\n    afficherDonnees(){\r\n        if (this.state.client.id !== \"\"){\r\n            return(\r\n                <section>\r\n                    <Transactions client={this.state.client} transactions={this.state.transactions}/>\r\n                    <Credits client={this.state.client} onAdd={this.changeClient.bind(this)}/>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.initialized) {\r\n            return null\r\n        } else {\r\n            const client = this.state.client;\r\n            return (\r\n                <section className=\"page\">\r\n                    <section className=\"entete\">\r\n                        <section className=\"navigation\">\r\n                            <h2 className=\"title\">Comptabilité</h2>\r\n                        </section>\r\n                        <section className=\"stickClient\">\r\n                            <h3>{client.nom}</h3>\r\n                            <h3>{client.prenom}</h3>\r\n                            <h3>{client.mail}</h3>\r\n                        </section>\r\n                    </section>\r\n                    <section className=\"corps\">\r\n                        <InfosClient clients={this.state.liste_clients} onChange={this.changeClient.bind(this)}/>\r\n                        {this.afficherDonnees()}\r\n                    </section>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}