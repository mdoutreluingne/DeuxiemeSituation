{"ast":null,"code":"import Dbal from \"./Dbal\";\nimport Salle from \"../metier/Salle\";\nexport default class DaoSalle {\n  /**\r\n   * Singleton\r\n   * @returns {DaoSalle}\r\n   */\n  constructor() {\n    if (!!DaoSalle.instance) {\n      return DaoSalle.instance;\n    }\n    /**@type {DaoSalle}**/\n\n\n    DaoSalle.instance = this;\n    /**@type {Dbal}**/\n\n    this.dbal = new Dbal();\n    return this;\n  }\n  /**\r\n   * Récupère la salle d'une réservation\r\n   * @param reservation {Reservation}\r\n   * @returns {Promise<Salle>}\r\n   */\n\n\n  async getSalleByReservation(reservation) {\n    const reponse = await this.dbal.get(reservation.salle);\n    return new Salle(JSON.parse(reponse));\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/modele/DaoSalle.js"],"names":["Dbal","Salle","DaoSalle","constructor","instance","dbal","getSalleByReservation","reservation","reponse","get","salle","JSON","parse"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,eAAe,MAAMC,QAAN,CAAe;AAC1B;;;;AAIAC,EAAAA,WAAW,GAAG;AACV,QAAI,CAAC,CAACD,QAAQ,CAACE,QAAf,EAAyB;AACrB,aAAOF,QAAQ,CAACE,QAAhB;AACH;AACD;;;AACAF,IAAAA,QAAQ,CAACE,QAAT,GAAoB,IAApB;AACA;;AACA,SAAKC,IAAL,GAAY,IAAIL,IAAJ,EAAZ;AACA,WAAO,IAAP;AACH;AAED;;;;;;;AAKA,QAAMM,qBAAN,CAA4BC,WAA5B,EAAwC;AACpC,UAAMC,OAAO,GAAG,MAAM,KAAKH,IAAL,CAAUI,GAAV,CAAcF,WAAW,CAACG,KAA1B,CAAtB;AACA,WAAQ,IAAIT,KAAJ,CAAUU,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAV,CAAR;AACH;;AAxByB","sourcesContent":["import Dbal from \"./Dbal\";\r\nimport Salle from \"../metier/Salle\";\r\n\r\nexport default class DaoSalle {\r\n    /**\r\n     * Singleton\r\n     * @returns {DaoSalle}\r\n     */\r\n    constructor() {\r\n        if (!!DaoSalle.instance) {\r\n            return DaoSalle.instance;\r\n        }\r\n        /**@type {DaoSalle}**/\r\n        DaoSalle.instance = this;\r\n        /**@type {Dbal}**/\r\n        this.dbal = new Dbal();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Récupère la salle d'une réservation\r\n     * @param reservation {Reservation}\r\n     * @returns {Promise<Salle>}\r\n     */\r\n    async getSalleByReservation(reservation){\r\n        const reponse = await this.dbal.get(reservation.salle);\r\n        return  new Salle(JSON.parse(reponse));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}