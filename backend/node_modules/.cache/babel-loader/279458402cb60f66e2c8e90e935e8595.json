{"ast":null,"code":"import Dbal from \"../modele/dbal\";\nimport client from \"../metier/client\";\nexport default class DaoClient {\n  constructor() {\n    if (!!DaoClient.instance) {\n      return DaoClient.instance;\n    }\n\n    DaoClient.instance = this;\n    this.dbal = new Dbal();\n    return this;\n  }\n\n  async getAll() {\n    const liste = [];\n    const reponse = await this.dbal.get(\"/api/clients\");\n    const clients = JSON.parse(reponse);\n\n    for (const c of clients) {\n      liste.push(new client(c));\n    }\n\n    return liste;\n  }\n\n  async load(c) {\n    let reponse = await this.dbal.get(c.ville);\n    c.ville = JSON.parse(reponse).nom;\n    reponse = await this.dbal.get(\"/api/client/soldeById/\" + c.id);\n    c.solde = JSON.parse(reponse);\n    return new client(c);\n  }\n\n  async archiver(client, valeur) {\n    const url = \"/api/client/modifClient/\" + client.id + \"/,/,/,/,/,/\" + valeur;\n    return await this.dbal.put(url);\n  }\n\n  async modifier(client) {\n    const archive = !client.archive ? \"0\" : \"1\";\n    const mail = client.mail.replace(\".\", \",\");\n    const url = \"/api/client/modifClient/\" + client.id + \"/\" + client.nom + \"/\" + client.prenom + \"/\" + client.ville + \"/\" + client.tel + \"/\" + mail + \"/\" + archive;\n    return await this.dbal.put(url);\n  }\n\n  async creer(client) {\n    const mail = client.mail.replace(\".\", \",\");\n    const aujourdhui = d.date2amd(new Date());\n    const ville = client.ville;\n    let url = \"/api/client/addClient/\" + client.nom + \"/\" + client.prenom + \"/\" + ville + \"/\" + client.tel + \"/\" + mail + \"/0\";\n    let response = await d.post(url);\n    const lastId = JSON.parse(response);\n    url = \"http://localhost:8080/api/clients/\" + lastId;\n    response = await d.get(url);\n    client = JSON.parse(response);\n    url = \"http://localhost:8080/api/transaction/addTransaction/\" + aujourdhui + \"/0,00/Carte bancaire/ /Creation du compte/ /\" + client.id;\n    response = await d.post(url);\n    client = await this.loadClient(client);\n    this.setState({\n      client: client\n    });\n    this.props.onChange(client);\n\n    if (JSON.parse(response)) {\n      alert(\"Le joueur à bien été crée.\");\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/modele/DaoClient.js"],"names":["Dbal","client","DaoClient","constructor","instance","dbal","getAll","liste","reponse","get","clients","JSON","parse","c","push","load","ville","nom","id","solde","archiver","valeur","url","put","modifier","archive","mail","replace","prenom","tel","creer","aujourdhui","d","date2amd","Date","response","post","lastId","loadClient","setState","props","onChange","alert"],"mappings":"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","sourcesContent":["import Dbal from \"../modele/dbal\";\r\nimport client from \"../metier/client\";\r\n\r\nexport default class DaoClient {\r\n    constructor() {\r\n        if (!!DaoClient.instance) {\r\n            return DaoClient.instance;\r\n        }\r\n        DaoClient.instance = this;\r\n        this.dbal = new Dbal();\r\n        return this;\r\n    }\r\n\r\n    async getAll(){\r\n        const liste =  [];\r\n        const reponse = await this.dbal.get(\"/api/clients\");\r\n        const clients = JSON.parse(reponse);\r\n        for (const c of clients) {\r\n            liste.push(new client(c));\r\n        }\r\n        return liste;\r\n    }\r\n\r\n    async load(c){\r\n        let reponse = await this.dbal.get(c.ville);\r\n        c.ville = (JSON.parse(reponse)).nom;\r\n        reponse = await this.dbal.get(\"/api/client/soldeById/\" + c.id);\r\n        c.solde = JSON.parse(reponse);\r\n        return new client(c);\r\n    }\r\n\r\n    async archiver(client, valeur){\r\n        const url = \"/api/client/modifClient/\"+ client.id + \"/,/,/,/,/,/\" + valeur;\r\n        return await this.dbal.put(url);\r\n    }\r\n\r\n    async modifier(client){\r\n        const archive = (!client.archive)?\"0\":\"1\";\r\n        const mail = client.mail.replace(\".\", \",\");\r\n        const url = \"/api/client/modifClient/\"+ client.id + \"/\"\r\n            + client.nom + \"/\"\r\n            + client.prenom + \"/\"\r\n            + client.ville + \"/\"\r\n            + client.tel + \"/\"\r\n            + mail + \"/\"\r\n            + archive;\r\n        return await this.dbal.put(url);\r\n    }\r\n\r\n    async creer(client){\r\n        const mail = client.mail.replace(\".\", \",\");\r\n        const aujourdhui = d.date2amd(new Date());\r\n        const ville = client.ville;\r\n\r\n        let url = \"/api/client/addClient/\"\r\n            + client.nom + \"/\"\r\n            + client.prenom + \"/\"\r\n            + ville + \"/\"\r\n            + client.tel + \"/\"\r\n            + mail + \"/0\";\r\n        let response = await d.post(url);\r\n        const lastId = JSON.parse(response);\r\n        url = \"http://localhost:8080/api/clients/\" + lastId;\r\n        response = await d.get(url);\r\n        client = JSON.parse(response);\r\n        url = \"http://localhost:8080/api/transaction/addTransaction/\" + aujourdhui + \"/0,00/Carte bancaire/ /Creation du compte/ /\" + client.id;\r\n        response = await d.post(url);\r\n        client =  await this.loadClient(client);\r\n        this.setState({client: client});\r\n        this.props.onChange(client);\r\n        if(JSON.parse(response)){alert(\"Le joueur à bien été crée.\")}\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}