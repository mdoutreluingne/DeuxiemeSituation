{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\PPE2\\\\DeuxiemeSituation\\\\backend\\\\src\\\\components\\\\InfosClient.js\";\nimport React from 'react';\nimport client from \"../metier/Client\";\nimport DaoClient from \"../modele/DaoClient\";\nimport DaoVille from \"../modele/DaoVille\";\n/**\r\n * Composant qui affiche le client\r\n */\n\nclass InfosClient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      /**@type {number}**/\n      update: 0,\n\n      /**@type {DaoClient}**/\n      daoClient: new DaoClient(),\n\n      /**@type {Client}**/\n      client: new client(null),\n\n      /**@type {[Client]}**/\n      listeClients: props.clients,\n\n      /**@type {[Ville]}**/\n      listeVilles: []\n    };\n  }\n  /**\r\n   * Force la mise à jour de la page\r\n   */\n\n\n  update() {\n    this.setState({\n      update: this.state.update + 1\n    });\n  }\n  /**\r\n   * Change une info du client\r\n   * @param propriete {string}\r\n   * @param event\r\n   * @returns {Promise<void>}\r\n   */\n\n\n  async change(propriete, event) {\n    const client = this.state.client;\n    client[propriete] = event.target.value;\n\n    if (propriete === \"ville\" && event.target.value.length >= 4) {\n      document.body.style.cursor = 'progress';\n      const villes = await new DaoVille().getVilleByNom(event.target.value);\n      document.body.style.cursor = 'default';\n      this.setState({\n        listeVilles: villes,\n        client: client\n      });\n    } else {\n      this.setState({\n        listeVilles: [],\n        client: client\n      });\n    }\n\n    this.props.onChange(client);\n  }\n  /**\r\n   * Séléctionne un client\r\n   * @param event\r\n   */\n\n\n  selectClient(event) {\n    const self = this;\n\n    if (event.nativeEvent.data === undefined) {\n      const options = Array.from(event.target.list.children);\n      options.forEach(async option => {\n        if (option.value === event.target.value) {\n          const c = await self.loadClient(JSON.parse(option.dataset.client));\n          this.setState({\n            client: c\n          });\n          this.props.onChange(c);\n        }\n      }); //Ou si l'on change son nom\n    } else {\n      const client = this.state.client;\n      client.nom = event.target.value;\n      this.setState({\n        client: client\n      });\n      this.props.onChange(client);\n    }\n  }\n  /**\r\n   * Charge les infos d'un client\r\n   * @param c {Client}\r\n   * @returns {Promise<client>}\r\n   */\n\n\n  async loadClient(c) {\n    document.body.style.cursor = 'progress';\n    const result = await this.state.daoClient.load(c);\n    document.body.style.cursor = 'default';\n    return result;\n  }\n  /**\r\n   * Reset les infos du client\r\n   */\n\n\n  reset() {\n    const c = new client(null);\n    this.setState({\n      client: c\n    });\n    this.props.onChange(c);\n  }\n  /**\r\n   * Archive le client séléctionné\r\n   * @param archive {string}\r\n   * @returns {Promise<void>}\r\n   */\n\n\n  async archiver(archive) {\n    const client = this.state.client;\n    client.archive = archive !== \"0\";\n    document.body.style.cursor = 'progress';\n    await this.state.daoClient.archiver(client, archive);\n    document.body.style.cursor = 'default';\n    this.setState({\n      client: client\n    });\n  }\n  /**\r\n   * Modifie le client\r\n   * @returns {Promise<void>}\r\n   */\n\n\n  async modifier() {\n    document.body.style.cursor = 'progress';\n    await this.state.daoClient.modifier(this.state.client);\n    alert(\"Le client a été modifié\");\n    document.body.style.cursor = 'default';\n    this.update();\n  }\n  /**\r\n   * Crée un nouveau client\r\n   * @returns {Promise<void>}\r\n   */\n\n\n  async creer() {\n    if (client.nom !== \"\" && client.prenom !== \"\") {\n      document.body.style.cursor = 'progress';\n      const client = await this.state.daoClient.creer(this.state.client);\n      document.body.style.cursor = 'default';\n      alert(\"Le client a été crée\");\n      this.setState({\n        client: client\n      });\n      this.props.onChange(client);\n    } else {\n      alert(\"Merci de renseigner les champs obligatoires\");\n    }\n  }\n  /**\r\n   * Affiche les boutons d'actions\r\n   * @returns {*}\r\n   */\n\n\n  afficherActions() {\n    if (this.state.client.id !== 0 && !this.state.client.archive) {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        onClick: this.modifier.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"MODIFIER\"), React.createElement(\"button\", {\n        className: \"archiver\",\n        onClick: this.archiver.bind(this, \"1\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"ARCHIVER\"), React.createElement(\"button\", {\n        className: \"nouveau\",\n        onClick: this.reset.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"NOUVEAU\"));\n    } else if (this.state.client.id !== 0) {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        onClick: this.modifier.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"MODIFIER\"), React.createElement(\"button\", {\n        className: \"desarchiver\",\n        onClick: this.archiver.bind(this, \"0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"DESARCHIVER\"), React.createElement(\"button\", {\n        className: \"nouveau\",\n        onClick: this.reset.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"NOUVEAU\"));\n    } else {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        onClick: this.creer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"CREER\"), React.createElement(\"button\", {\n        className: \"archiver\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"ARCHIVER\"));\n    }\n  }\n\n  render() {\n    const client = this.state.client;\n    return React.createElement(\"section\", {\n      className: \"selectionClient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"client\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"CLIENTS\"), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"NOM\"), React.createElement(\"input\", {\n      className: \"zone prenom\",\n      type: \"text\",\n      list: \"listeClient\",\n      value: client.nom,\n      onChange: this.selectClient.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"datalist\", {\n      id: \"listeClient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.state.listeClients.map((client, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        \"data-client\": JSON.stringify(client),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, client.nom + client.prenom);\n    }))), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"PRENOM\"), React.createElement(\"input\", {\n      className: \"zone prenom\",\n      type: \"text\",\n      value: client.prenom,\n      onChange: this.change.bind(this, \"prenom\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"VILLE\"), React.createElement(\"input\", {\n      className: \"zone ville\",\n      type: \"text\",\n      list: \"listeVille\",\n      value: client.ville,\n      onChange: this.change.bind(this, \"ville\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"datalist\", {\n      id: \"listeVille\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.state.listeVilles.map((ville, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        \"data-client\": JSON.stringify(ville),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, ville.nom);\n    }))), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"E-MAIL\"), React.createElement(\"input\", {\n      className: \"zone mail\",\n      type: \"text\",\n      value: client.mail,\n      onChange: this.change.bind(this, \"mail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"TELEPHONE\"), React.createElement(\"input\", {\n      className: \"zone telephone\",\n      type: \"text\",\n      value: client.tel,\n      onChange: this.change.bind(this, \"tel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"SOLDE\"), React.createElement(\"input\", {\n      className: \"zone solde\",\n      type: \"text\",\n      value: client.solde,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), this.afficherActions()));\n  }\n\n}\n\nexport default InfosClient;","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/components/InfosClient.js"],"names":["React","client","DaoClient","DaoVille","InfosClient","Component","constructor","props","state","update","daoClient","listeClients","clients","listeVilles","setState","change","propriete","event","target","value","length","document","body","style","cursor","villes","getVilleByNom","onChange","selectClient","self","nativeEvent","data","undefined","options","Array","from","list","children","forEach","option","c","loadClient","JSON","parse","dataset","nom","result","load","reset","archiver","archive","modifier","alert","creer","prenom","afficherActions","id","bind","render","map","index","stringify","ville","mail","tel","solde"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport client from \"../metier/Client\";\r\nimport DaoClient from \"../modele/DaoClient\";\r\nimport DaoVille from \"../modele/DaoVille\";\r\n\r\n/**\r\n * Composant qui affiche le client\r\n */\r\nclass InfosClient extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            /**@type {number}**/\r\n            update: 0,\r\n            /**@type {DaoClient}**/\r\n            daoClient: new DaoClient(),\r\n            /**@type {Client}**/\r\n            client: new client(null),\r\n            /**@type {[Client]}**/\r\n            listeClients: props.clients,\r\n            /**@type {[Ville]}**/\r\n            listeVilles: [],\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Force la mise à jour de la page\r\n     */\r\n    update() {\r\n        this.setState({\r\n            update: this.state.update + 1\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Change une info du client\r\n     * @param propriete {string}\r\n     * @param event\r\n     * @returns {Promise<void>}\r\n     */\r\n    async change(propriete, event) {\r\n        const client = this.state.client;\r\n        client[propriete] = event.target.value;\r\n\r\n        if (propriete === \"ville\" && event.target.value.length >= 4){\r\n            document.body.style.cursor = 'progress';\r\n            const villes = await new DaoVille().getVilleByNom(event.target.value);\r\n            document.body.style.cursor = 'default';\r\n            this.setState({\r\n                listeVilles: villes,\r\n                client: client\r\n            });\r\n        } else {\r\n            this.setState({\r\n                listeVilles: [],\r\n                client: client\r\n            });\r\n        }\r\n        this.props.onChange(client);\r\n    }\r\n\r\n    /**\r\n     * Séléctionne un client\r\n     * @param event\r\n     */\r\n    selectClient(event) {\r\n        const self = this;\r\n        if (event.nativeEvent.data === undefined) {\r\n            const options = Array.from(event.target.list.children);\r\n            options.forEach(async (option) => {\r\n                if (option.value === event.target.value) {\r\n                    const c =  await self.loadClient(JSON.parse(option.dataset.client));\r\n                    this.setState({client: c});\r\n                    this.props.onChange(c);\r\n                }\r\n            });\r\n        //Ou si l'on change son nom\r\n        } else {\r\n            const client = this.state.client;\r\n            client.nom = event.target.value;\r\n            this.setState({\r\n                client: client\r\n            });\r\n            this.props.onChange(client);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Charge les infos d'un client\r\n     * @param c {Client}\r\n     * @returns {Promise<client>}\r\n     */\r\n    async loadClient(c){\r\n        document.body.style.cursor = 'progress';\r\n        const result = await this.state.daoClient.load(c);\r\n        document.body.style.cursor = 'default';\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Reset les infos du client\r\n     */\r\n    reset() {\r\n        const c = new client(null);\r\n        this.setState({client: c});\r\n        this.props.onChange(c);\r\n    }\r\n\r\n    /**\r\n     * Archive le client séléctionné\r\n     * @param archive {string}\r\n     * @returns {Promise<void>}\r\n     */\r\n    async archiver(archive){\r\n        const client = this.state.client;\r\n        client.archive = (archive !== \"0\");\r\n        document.body.style.cursor = 'progress';\r\n        await this.state.daoClient.archiver(client, archive);\r\n        document.body.style.cursor = 'default';\r\n        this.setState({\r\n            client: client\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Modifie le client\r\n     * @returns {Promise<void>}\r\n     */\r\n    async modifier(){\r\n        document.body.style.cursor = 'progress';\r\n        await this.state.daoClient.modifier(this.state.client);\r\n        alert(\"Le client a été modifié\");\r\n        document.body.style.cursor = 'default';\r\n        this.update();\r\n    }\r\n\r\n    /**\r\n     * Crée un nouveau client\r\n     * @returns {Promise<void>}\r\n     */\r\n    async creer(){\r\n        if (client.nom !== \"\" && client.prenom !== \"\"){\r\n            document.body.style.cursor = 'progress';\r\n            const client = await this.state.daoClient.creer(this.state.client);\r\n            document.body.style.cursor = 'default';\r\n            alert(\"Le client a été crée\");\r\n            this.setState({client: client});\r\n            this.props.onChange(client);\r\n        } else {\r\n            alert(\"Merci de renseigner les champs obligatoires\")\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Affiche les boutons d'actions\r\n     * @returns {*}\r\n     */\r\n    afficherActions() {\r\n        if (this.state.client.id !== 0 && !this.state.client.archive) {\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\" onClick={this.modifier.bind(this)}>MODIFIER</button>\r\n                    <button className=\"archiver\" onClick={this.archiver.bind(this,\"1\")}>ARCHIVER</button>\r\n                    <button className=\"nouveau\" onClick={this.reset.bind(this)}>NOUVEAU</button>\r\n                </section>\r\n            )\r\n        } else if (this.state.client.id !== 0) {\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\" onClick={this.modifier.bind(this)}>MODIFIER</button>\r\n                    <button className=\"desarchiver\" onClick={this.archiver.bind(this,\"0\")}>DESARCHIVER</button>\r\n                    <button className=\"nouveau\" onClick={this.reset.bind(this)}>NOUVEAU</button>\r\n                </section>\r\n            )\r\n        } else {\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\" onClick={this.creer.bind(this)}>CREER</button>\r\n                    <button className=\"archiver\" disabled>ARCHIVER</button>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const client = this.state.client;\r\n        return (\r\n            <section className=\"selectionClient\">\r\n                <section className=\"client\">\r\n                    <h2 className=\"title\">CLIENTS</h2>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">NOM</legend>\r\n                        <input className=\"zone prenom\" type=\"text\" list=\"listeClient\" value={client.nom}\r\n                               onChange={this.selectClient.bind(this)}/>\r\n                        <datalist id=\"listeClient\">\r\n                            {this.state.listeClients.map((client, index) => {\r\n                                return (\r\n                                    <option key={index}\r\n                                            data-client={JSON.stringify(client)}>{client.nom + client.prenom}</option>\r\n                                )\r\n                            })}\r\n                        </datalist>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">PRENOM</legend>\r\n                        <input className=\"zone prenom\" type=\"text\" value={client.prenom}\r\n                               onChange={this.change.bind(this, \"prenom\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">VILLE</legend>\r\n                        <input className=\"zone ville\" type=\"text\" list=\"listeVille\" value={client.ville}\r\n                               onChange={this.change.bind(this, \"ville\")}/>\r\n                        <datalist id=\"listeVille\">\r\n                            {this.state.listeVilles.map((ville, index) => {\r\n                                return (\r\n                                    <option key={index}\r\n                                            data-client={JSON.stringify(ville)}>{ville.nom}</option>\r\n                                )\r\n                            })}\r\n                        </datalist>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">E-MAIL</legend>\r\n                        <input className=\"zone mail\" type=\"text\" value={client.mail}\r\n                               onChange={this.change.bind(this, \"mail\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">TELEPHONE</legend>\r\n                        <input className=\"zone telephone\" type=\"text\" value={client.tel}\r\n                               onChange={this.change.bind(this, \"tel\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">SOLDE</legend>\r\n                        <input className=\"zone solde\" type=\"text\" value={client.solde} disabled/>\r\n                    </div>\r\n                    {this.afficherActions()}\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfosClient;"]},"metadata":{},"sourceType":"module"}