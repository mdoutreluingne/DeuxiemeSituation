{"ast":null,"code":"import Dbal from \"./dbal\";\nimport Obstacle from \"../metier/Obstacle\";\nexport default class DaoObstacle {\n  constructor() {\n    if (!!DaoObstacle.instance) {\n      return DaoObstacle.instance;\n    }\n\n    DaoObstacle.instance = this;\n    this.dbal = new Dbal();\n    return this;\n  }\n\n  async load(obstacle) {\n    const reponse = await this.dbal.get(obstacle.article);\n    const article = JSON.parse(reponse);\n    this.libelle = article[0].libelle;\n    this.prix = article[0].montant;\n  }\n\n  async getObstacleByReservation(reservation) {\n    const response = await this.dbal.get(\"/api/obstacle/obstacleByIdReservation/\" + reservation.id);\n    const obstacles = JSON.parse(response);\n    const liste = [];\n\n    for (const i in obstacles) {\n      let o = new Obstacle(obstacles[i]);\n      o = await this.load(o);\n      liste.push(o);\n    }\n\n    return liste;\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/modele/DaoObstacle.js"],"names":["Dbal","Obstacle","DaoObstacle","constructor","instance","dbal","load","obstacle","reponse","get","article","JSON","parse","libelle","prix","montant","getObstacleByReservation","reservation","response","id","obstacles","liste","i","o","push"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,eAAe,MAAMC,WAAN,CAAkB;AAC7BC,EAAAA,WAAW,GAAG;AACV,QAAI,CAAC,CAACD,WAAW,CAACE,QAAlB,EAA4B;AACxB,aAAOF,WAAW,CAACE,QAAnB;AACH;;AACDF,IAAAA,WAAW,CAACE,QAAZ,GAAuB,IAAvB;AACA,SAAKC,IAAL,GAAY,IAAIL,IAAJ,EAAZ;AACA,WAAO,IAAP;AACH;;AAED,QAAMM,IAAN,CAAWC,QAAX,EAAoB;AAChB,UAAMC,OAAO,GAAG,MAAM,KAAKH,IAAL,CAAUI,GAAV,CAAcF,QAAQ,CAACG,OAAvB,CAAtB;AACA,UAAMA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAhB;AACA,SAAKK,OAAL,GAAeH,OAAO,CAAC,CAAD,CAAP,CAAWG,OAA1B;AACA,SAAKC,IAAL,GAAYJ,OAAO,CAAC,CAAD,CAAP,CAAWK,OAAvB;AACH;;AAED,QAAMC,wBAAN,CAA+BC,WAA/B,EAA2C;AACvC,UAAMC,QAAQ,GAAG,MAAM,KAAKb,IAAL,CAAUI,GAAV,CAAc,2CAA2CQ,WAAW,CAACE,EAArE,CAAvB;AACA,UAAMC,SAAS,GAAGT,IAAI,CAACC,KAAL,CAAWM,QAAX,CAAlB;AACA,UAAMG,KAAK,GAAG,EAAd;;AACA,SAAK,MAAMC,CAAX,IAAgBF,SAAhB,EAA2B;AACvB,UAAIG,CAAC,GAAG,IAAItB,QAAJ,CAAamB,SAAS,CAACE,CAAD,CAAtB,CAAR;AACAC,MAAAA,CAAC,GAAG,MAAM,KAAKjB,IAAL,CAAUiB,CAAV,CAAV;AACAF,MAAAA,KAAK,CAACG,IAAN,CAAWD,CAAX;AACH;;AACD,WAAOF,KAAP;AACH;;AA3B4B","sourcesContent":["import Dbal from \"./dbal\";\r\nimport Obstacle from \"../metier/Obstacle\";\r\n\r\nexport default class DaoObstacle {\r\n    constructor() {\r\n        if (!!DaoObstacle.instance) {\r\n            return DaoObstacle.instance;\r\n        }\r\n        DaoObstacle.instance = this;\r\n        this.dbal = new Dbal();\r\n        return this;\r\n    }\r\n\r\n    async load(obstacle){\r\n        const reponse = await this.dbal.get(obstacle.article);\r\n        const article = JSON.parse(reponse);\r\n        this.libelle = article[0].libelle;\r\n        this.prix = article[0].montant;\r\n    }\r\n\r\n    async getObstacleByReservation(reservation){\r\n        const response = await this.dbal.get(\"/api/obstacle/obstacleByIdReservation/\" + reservation.id);\r\n        const obstacles = JSON.parse(response);\r\n        const liste = [];\r\n        for (const i in obstacles) {\r\n            let o = new Obstacle(obstacles[i]);\r\n            o = await this.load(o);\r\n            liste.push(o);\r\n        }\r\n        return liste;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}