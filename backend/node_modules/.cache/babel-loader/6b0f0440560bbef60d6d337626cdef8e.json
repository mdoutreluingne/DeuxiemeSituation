{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\xampp\\\\htdocs\\\\DeuxiemeSituation\\\\backend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\xampp\\\\htdocs\\\\DeuxiemeSituation\\\\backend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\xampp\\\\htdocs\\\\DeuxiemeSituation\\\\backend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\xampp\\\\htdocs\\\\DeuxiemeSituation\\\\backend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";var Dbal=/*#__PURE__*/function(){/**\r\n     * Singleton\r\n     * @returns {Dbal}\r\n     */function Dbal(){_classCallCheck(this,Dbal);if(!!Dbal.instance){return Dbal.instance;}/**@type Dbal**/Dbal.instance=this;/**@type string**/this.ip=this.readIp();/**@type Promise<string>**/this.token=this.load();return this;}_createClass(Dbal,[{key:\"readIp\",value:function readIp(){var config=require('../config.json');return config.bdd;}/**\r\n     * Récupère le token d'authorisation pour accéder à l'API\r\n     * @returns {Promise<string>}\r\n     */},{key:\"load\",value:function(){var _load=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var username,mdp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:username=window.prompt(\"username : \");mdp=window.prompt(\"mot de passe : \");_context.next=4;return this.post(\"/api/login_check\",{\"username\":username,\"password\":mdp});case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},_callee,this);}));function load(){return _load.apply(this,arguments);}return load;}()/**\r\n     * Métode get\r\n     * @param url {string}\r\n     * @returns {Promise<string>}\r\n     */},{key:\"get\",value:function(){var _get=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url){var token;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url=\"http://\"+this.ip+url;_context2.next=3;return this.token;case 3:token=_context2.sent;token=JSON.parse(token).token;return _context2.abrupt(\"return\",new Promise(function(resolve,reject){var xhr=new window.XMLHttpRequest();xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200){resolve(xhr.responseText);}else{reject(xhr);}}};xhr.open('GET',url,true);xhr.setRequestHeader(\"Authorization\",\"Bearer \"+token);xhr.send();}));case 6:case\"end\":return _context2.stop();}}},_callee2,this);}));function get(_x){return _get.apply(this,arguments);}return get;}()/**\r\n     * Méthode put\r\n     * @param url {string}\r\n     * @param params {string||object}\r\n     * @returns {Promise<string>}\r\n     */},{key:\"put\",value:function(){var _put=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url,params){var token;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:url=\"http://\"+this.ip+url;_context3.next=3;return this.token;case 3:token=_context3.sent;token=JSON.parse(token).token;return _context3.abrupt(\"return\",new Promise(function(resolve,reject){var xhr=new window.XMLHttpRequest();xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200){resolve(xhr.responseText);}else{reject(xhr);}}};xhr.open('PUT',url,true);xhr.setRequestHeader(\"Content-Type\",\"application/json\");xhr.setRequestHeader(\"Authorization\",\"Bearer \"+token);xhr.send(params);}));case 6:case\"end\":return _context3.stop();}}},_callee3,this);}));function put(_x2,_x3){return _put.apply(this,arguments);}return put;}()/**\r\n     * Méthode post\r\n     * @param url {string}\r\n     * @param objet {string}\r\n     * @returns {Promise<string>}\r\n     */},{key:\"post\",value:function post(url,objet){var _this=this;url=\"http://\"+this.ip+url;return new Promise(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(resolve,reject){var xhr,token;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:xhr=new window.XMLHttpRequest();xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===201||xhr.status===200){resolve(xhr.responseText);}else{reject(xhr);}}};xhr.open('POST',url,true);if(!(_this.token!==undefined)){_context4.next=9;break;}_context4.next=6;return _this.token;case 6:token=_context4.sent;token=JSON.parse(token).token;xhr.setRequestHeader(\"Authorization\",\"Bearer \"+token);case 9:if(objet){xhr.setRequestHeader(\"Content-Type\",\"application/json\");if(typeof objet===\"object\"){xhr.send(JSON.stringify(objet));}else{xhr.send(objet);}}else{xhr.send();}case 10:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4,_x5){return _ref.apply(this,arguments);};}());}/**\r\n     * Transforme une date au format YYYY-MM-DD\r\n     * @param date\r\n     * @returns {string}\r\n     */},{key:\"date2amd\",value:function date2amd(date){var options={year:'numeric',month:'numeric',day:'numeric'};date=date.toLocaleDateString('fr-FR',options);var val=date.split(\"/\");date=val[2]+\"-\"+val[1]+\"-\"+val[0];return date;}}]);return Dbal;}();//============== A R CH I V E S ==================\n/**\r\n *fetch(\"http://localhost:8080/api/clients\")\r\n    .then(res => res.json())\r\n    .then(\r\n        async (result) => {\r\n        const create = result.map((c)=> {\r\n        clients.push(new client(c));\r\n        });\r\n        return await Promise.all(create);\r\n    },\r\n    (error) => {console.log(error);}\r\n );\r\n **/export{Dbal as default};","map":{"version":3,"sources":["C:/xampp/htdocs/DeuxiemeSituation/backend/src/modele/Dbal.js"],"names":["Dbal","instance","ip","readIp","token","load","config","require","bdd","username","window","prompt","mdp","post","url","JSON","parse","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","setRequestHeader","send","params","objet","undefined","stringify","date","options","year","month","day","toLocaleDateString","val","split"],"mappings":"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","sourcesContent":["export default class Dbal {\r\n    /**\r\n     * Singleton\r\n     * @returns {Dbal}\r\n     */\r\n    constructor() {\r\n        if (!!Dbal.instance) {\r\n            return Dbal.instance;\r\n        }\r\n        /**@type Dbal**/\r\n        Dbal.instance = this;\r\n        /**@type string**/\r\n        this.ip = this.readIp();\r\n        /**@type Promise<string>**/\r\n        this.token = this.load();\r\n        return this;\r\n    }\r\n\r\n\r\n    readIp(){\r\n        const config = require('../config.json');\r\n        return config.bdd;\r\n    }\r\n\r\n    /**\r\n     * Récupère le token d'authorisation pour accéder à l'API\r\n     * @returns {Promise<string>}\r\n     */\r\n    async load(){\r\n        const username = window.prompt(\"username : \");\r\n        const mdp = window.prompt(\"mot de passe : \");\r\n        return await this.post(\"/api/login_check\", {\"username\": username,\"password\":mdp});\r\n    }\r\n\r\n    /**\r\n     * Métode get\r\n     * @param url {string}\r\n     * @returns {Promise<string>}\r\n     */\r\n    async get(url){\r\n        url = \"http://\" + this.ip + url;\r\n        let token = await this.token;\r\n        token = JSON.parse(token).token;\r\n        return new Promise((resolve, reject)=>{\r\n            const xhr = new window.XMLHttpRequest();\r\n            xhr.onreadystatechange = ()=>{\r\n                if (xhr.readyState === 4){\r\n                    if (xhr.status === 200){\r\n                        resolve(xhr.responseText)\r\n                    } else{\r\n                        reject(xhr);\r\n                    }\r\n                }\r\n            };\r\n            xhr.open('GET', url, true);\r\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n            xhr.send()\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Méthode put\r\n     * @param url {string}\r\n     * @param params {string||object}\r\n     * @returns {Promise<string>}\r\n     */\r\n    async put(url, params){\r\n        url = \"http://\" + this.ip + url;\r\n        let token = await this.token;\r\n        token = JSON.parse(token).token;\r\n        return new Promise((resolve, reject)=>{\r\n            const xhr = new window.XMLHttpRequest();\r\n            xhr.onreadystatechange = ()=>{\r\n                if (xhr.readyState === 4){\r\n                    if (xhr.status === 200){\r\n                        resolve(xhr.responseText)\r\n                    } else{\r\n                        reject(xhr);\r\n                    }\r\n                }\r\n            };\r\n            xhr.open('PUT', url, true);\r\n            xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n            xhr.send(params)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Méthode post\r\n     * @param url {string}\r\n     * @param objet {string}\r\n     * @returns {Promise<string>}\r\n     */\r\n    post(url, objet){\r\n        url = \"http://\" + this.ip + url;\r\n        return new Promise(async (resolve, reject)=>{\r\n            const xhr = new window.XMLHttpRequest();\r\n            xhr.onreadystatechange = ()=>{\r\n                if (xhr.readyState === 4){\r\n                    if (xhr.status === 201 || xhr.status === 200){\r\n                        resolve(xhr.responseText)\r\n                    } else{\r\n                        reject(xhr);\r\n                    }\r\n                }\r\n            };\r\n            xhr.open('POST', url, true);\r\n            if (this.token !== undefined){\r\n                let token = await this.token;\r\n                token = JSON.parse(token).token;\r\n                xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n            }\r\n            if (objet){\r\n                xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                if (typeof objet === \"object\"){xhr.send(JSON.stringify(objet))}\r\n                else {xhr.send(objet)}\r\n            }\r\n            else {xhr.send()}\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Transforme une date au format YYYY-MM-DD\r\n     * @param date\r\n     * @returns {string}\r\n     */\r\n    date2amd(date){\r\n        const options = {year: 'numeric', month: 'numeric', day: 'numeric' };\r\n        date = date.toLocaleDateString('fr-FR', options);\r\n        const val = date.split(\"/\");\r\n        date = val[2] + \"-\" + val[1] + \"-\" + val[0];\r\n        return date;\r\n    }\r\n}\r\n\r\n//============== A R CH I V E S ==================\r\n/**\r\n *fetch(\"http://localhost:8080/api/clients\")\r\n    .then(res => res.json())\r\n    .then(\r\n        async (result) => {\r\n        const create = result.map((c)=> {\r\n        clients.push(new client(c));\r\n        });\r\n        return await Promise.all(create);\r\n    },\r\n    (error) => {console.log(error);}\r\n );\r\n **/"]},"metadata":{},"sourceType":"module"}