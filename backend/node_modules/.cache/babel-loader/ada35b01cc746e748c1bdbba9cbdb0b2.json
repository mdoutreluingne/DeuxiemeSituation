{"ast":null,"code":"import Dbal from \"../modele/dbal\";\nimport client from \"../metier/client\";\nimport DaoTransaction from \"./DaoTransaction\";\nexport default class DaoClient {\n  constructor() {\n    if (!!DaoClient.instance) {\n      return DaoClient.instance;\n    }\n\n    DaoClient.instance = this;\n    this.dbal = new Dbal();\n    return this;\n  }\n\n  async getAll() {\n    const liste = [];\n    const reponse = await this.dbal.get(\"/api/clients\");\n    const clients = JSON.parse(reponse);\n\n    for (const c of clients) {\n      liste.push(new client(c));\n    }\n\n    return liste;\n  }\n\n  async getById(id) {\n    const url = \"/api/clients/\" + id;\n    return await this.dbalget(url);\n  }\n\n  async load(c) {\n    let reponse = await this.dbal.get(c.ville);\n    c.ville = JSON.parse(reponse).nom;\n    reponse = await this.dbal.get(\"/api/client/soldeById/\" + c.id);\n    c.solde = JSON.parse(reponse);\n    return new client(c);\n  }\n\n  async archiver(client, valeur) {\n    const url = \"/api/client/modifClient/\" + client.id + \"/,/,/,/,/,/\" + valeur;\n    return await this.dbal.put(url);\n  }\n\n  async modifier(client) {\n    const archive = !client.archive ? \"0\" : \"1\";\n    const mail = client.mail.replace(\".\", \",\");\n    const url = \"/api/client/modifClient/\" + client.id + \"/\" + client.nom + \"/\" + client.prenom + \"/\" + client.ville + \"/\" + client.tel + \"/\" + mail + \"/\" + archive;\n    return await this.dbal.put(url);\n  }\n\n  async creer(client) {\n    const mail = client.mail.replace(\".\", \",\");\n    const ville = client.ville;\n    let url = \"/api/client/addClient/\" + client.nom + \"/\" + client.prenom + \"/\" + ville + \"/\" + client.tel + \"/\" + mail + \"/0\";\n    let response = await this.dbal.post(url);\n    const lastId = JSON.parse(response);\n    client = this.getById(lastId);\n    new DaoTransaction().initialiser(client);\n    return await this.load(client);\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/modele/DaoClient.js"],"names":["Dbal","client","DaoTransaction","DaoClient","constructor","instance","dbal","getAll","liste","reponse","get","clients","JSON","parse","c","push","getById","id","url","dbalget","load","ville","nom","solde","archiver","valeur","put","modifier","archive","mail","replace","prenom","tel","creer","response","post","lastId","initialiser"],"mappings":"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","sourcesContent":["import Dbal from \"../modele/dbal\";\r\nimport client from \"../metier/client\";\r\nimport DaoTransaction from \"./DaoTransaction\";\r\n\r\nexport default class DaoClient {\r\n    constructor() {\r\n        if (!!DaoClient.instance) {\r\n            return DaoClient.instance;\r\n        }\r\n        DaoClient.instance = this;\r\n        this.dbal = new Dbal();\r\n        return this;\r\n    }\r\n\r\n    async getAll(){\r\n        const liste =  [];\r\n        const reponse = await this.dbal.get(\"/api/clients\");\r\n        const clients = JSON.parse(reponse);\r\n        for (const c of clients) {\r\n            liste.push(new client(c));\r\n        }\r\n        return liste;\r\n    }\r\n\r\n    async getById(id){\r\n        const url = \"/api/clients/\" + id;\r\n        return await this.dbalget(url);\r\n    }\r\n\r\n    async load(c){\r\n        let reponse = await this.dbal.get(c.ville);\r\n        c.ville = (JSON.parse(reponse)).nom;\r\n        reponse = await this.dbal.get(\"/api/client/soldeById/\" + c.id);\r\n        c.solde = JSON.parse(reponse);\r\n        return new client(c);\r\n    }\r\n\r\n    async archiver(client, valeur){\r\n        const url = \"/api/client/modifClient/\"+ client.id + \"/,/,/,/,/,/\" + valeur;\r\n        return await this.dbal.put(url);\r\n    }\r\n\r\n    async modifier(client){\r\n        const archive = (!client.archive)?\"0\":\"1\";\r\n        const mail = client.mail.replace(\".\", \",\");\r\n        const url = \"/api/client/modifClient/\"+ client.id + \"/\"\r\n            + client.nom + \"/\"\r\n            + client.prenom + \"/\"\r\n            + client.ville + \"/\"\r\n            + client.tel + \"/\"\r\n            + mail + \"/\"\r\n            + archive;\r\n        return await this.dbal.put(url);\r\n    }\r\n\r\n    async creer(client){\r\n        const mail = client.mail.replace(\".\", \",\");\r\n        const ville = client.ville;\r\n\r\n        let url = \"/api/client/addClient/\"\r\n            + client.nom + \"/\"\r\n            + client.prenom + \"/\"\r\n            + ville + \"/\"\r\n            + client.tel + \"/\"\r\n            + mail + \"/0\";\r\n        let response = await this.dbal.post(url);\r\n        const lastId = JSON.parse(response);\r\n\r\n        client = this.getById(lastId);\r\n        new DaoTransaction().initialiser(client);\r\n        return await this.load(client);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}