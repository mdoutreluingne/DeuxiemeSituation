{"ast":null,"code":"import Dbal from \"./dbal\";\nimport Transaction from \"../metier/Transaction\";\nexport default class DaoTransaction {\n  constructor() {\n    if (!!DaoClient.instance) {\n      return DaoTransaction.instance;\n    }\n\n    DaoTransaction.instance = this;\n    this.dbal = new Dbal();\n    return this;\n  }\n\n  async getAllByClientId() {\n    const liste = [];\n    const reponse = await this.dbal.get(\"transaction/byIdClient/\" + client.id);\n    const transactions = JSON.parse(reponse);\n    transactions.forEach(t => {\n      liste.push(new Transaction(t));\n    });\n    return liste;\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/modele/DaoTransaction.js"],"names":["Dbal","Transaction","DaoTransaction","constructor","DaoClient","instance","dbal","getAllByClientId","liste","reponse","get","client","id","transactions","JSON","parse","forEach","t","push"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,eAAe,MAAMC,cAAN,CAAqB;AAChCC,EAAAA,WAAW,GAAG;AACV,QAAI,CAAC,CAACC,SAAS,CAACC,QAAhB,EAA0B;AACtB,aAAOH,cAAc,CAACG,QAAtB;AACH;;AACDH,IAAAA,cAAc,CAACG,QAAf,GAA0B,IAA1B;AACA,SAAKC,IAAL,GAAY,IAAIN,IAAJ,EAAZ;AACA,WAAO,IAAP;AACH;;AAED,QAAMO,gBAAN,GAAwB;AACpB,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,OAAO,GAAG,MAAM,KAAKH,IAAL,CAAUI,GAAV,CAAc,4BAA4BC,MAAM,CAACC,EAAjD,CAAtB;AACA,UAAMC,YAAY,GAAIC,IAAI,CAACC,KAAL,CAAWN,OAAX,CAAtB;AACAI,IAAAA,YAAY,CAACG,OAAb,CAAsBC,CAAD,IAAK;AACtBT,MAAAA,KAAK,CAACU,IAAN,CAAW,IAAIjB,WAAJ,CAAgBgB,CAAhB,CAAX;AACH,KAFD;AAGA,WAAOT,KAAP;AACH;;AAlB+B","sourcesContent":["import Dbal from \"./dbal\";\r\nimport Transaction from \"../metier/Transaction\";\r\n\r\nexport default class DaoTransaction {\r\n    constructor() {\r\n        if (!!DaoClient.instance) {\r\n            return DaoTransaction.instance;\r\n        }\r\n        DaoTransaction.instance = this;\r\n        this.dbal = new Dbal();\r\n        return this;\r\n    }\r\n\r\n    async getAllByClientId(){\r\n        const liste = [];\r\n        const reponse = await this.dbal.get(\"transaction/byIdClient/\" + client.id);\r\n        const transactions = (JSON.parse(reponse));\r\n        transactions.forEach((t)=>{\r\n            liste.push(new Transaction(t))\r\n        });\r\n        return liste;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}