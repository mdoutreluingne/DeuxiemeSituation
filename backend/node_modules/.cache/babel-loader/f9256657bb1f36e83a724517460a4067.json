{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\PPE2\\\\DeuxiemeSituation\\\\backend\\\\src\\\\components\\\\InfosClient.js\";\nimport React from 'react';\nimport client from \"../metier/client\";\nimport Dbal from \"../modele/dbal\";\nconst d = new Dbal();\n\nclass InfosClient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      update: 0,\n      listeClients: props.clients,\n      client: new client(null)\n    };\n  }\n\n  update() {\n    this.setState({\n      update: this.state.update + 1\n    });\n  }\n\n  change(propriete, event) {\n    const client = this.state.client;\n    client[propriete] = event.target.value;\n    this.setState({\n      client: client\n    });\n    this.props.onChange(client);\n  }\n\n  selectClient(event) {\n    if (event.nativeEvent.data === undefined) {\n      const options = Array.from(event.target.list.children);\n      options.forEach(async option => {\n        if (option.value === event.target.value) {\n          let c = JSON.parse(option.dataset.client);\n          let response = await d.get(\"http://localhost:8080\" + c.ville);\n          c.ville = JSON.parse(response).nom;\n          response = await d.get(\"http://localhost:8080/api/client/soldeById/\" + c.id);\n          c.solde = JSON.parse(response);\n          clientSelect = new client(clientSelect);\n          setTimeout(() => {\n            this.setState({\n              client: clientSelect\n            });\n            this.props.onChange(clientSelect);\n          }, 1000);\n        }\n      });\n    } else {\n      const client = this.state.client;\n      client.nom = event.target.value;\n      this.setState({\n        client: client\n      });\n      this.props.onChange(client);\n    }\n    /*\r\n    liste.push(new client({\r\n    \"id\": c.id,\r\n    \"nom\": c.nom,\r\n    \"prenom\": c.prenom,\r\n    \"ville\": ville.nom,\r\n    \"tel\": c.tel,\r\n    \"mail\": c.mail,\r\n    \"solde\": solde[0][1],\r\n    \"archive\": c.archive\r\n    }));*/\n\n  }\n\n  reset() {\n    const c = new client(null);\n    this.setState({\n      client: c\n    });\n    this.props.onChange(c);\n  }\n\n  afficherActions() {\n    if (this.state.client.id !== \"\" && !this.state.client.archive) {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"MODIFIER\"), React.createElement(\"button\", {\n        className: \"archiver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"ARCHIVER\"), React.createElement(\"button\", {\n        className: \"nouveau\",\n        onClick: this.reset.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"NOUVEAU\"));\n    } else if (this.state.client.archive) {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"MODIFIER\"), React.createElement(\"button\", {\n        className: \"desarchiver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"DESARCHIVER\"), React.createElement(\"button\", {\n        className: \"nouveau\",\n        onClick: this.reset.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"NOUVEAU\"));\n    } else {\n      return React.createElement(\"section\", {\n        className: \"actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"editer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"CREER\"), React.createElement(\"button\", {\n        className: \"archiver\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"ARCHIVER\"));\n    }\n  }\n\n  render() {\n    //console.log(this.state.listeClients);\n    const client = this.state.client;\n    return React.createElement(\"section\", {\n      className: \"selectionClient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"client\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"CLIENTS\"), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"NOM\"), React.createElement(\"input\", {\n      className: \"zone prenom\",\n      type: \"text\",\n      list: \"listeClient\",\n      value: client.nom,\n      onChange: this.selectClient.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"datalist\", {\n      id: \"listeClient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.listeClients.map((client, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        \"data-client\": JSON.stringify(client),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, client.nom + client.prenom);\n    }))), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"PRENOM\"), React.createElement(\"input\", {\n      className: \"zone prenom\",\n      type: \"text\",\n      value: client.prenom,\n      onChange: this.change.bind(this, \"prenom\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"VILLE\"), React.createElement(\"input\", {\n      className: \"zone ville\",\n      type: \"text\",\n      value: client.ville,\n      onChange: this.change.bind(this, \"ville\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"E-MAIL\"), React.createElement(\"input\", {\n      className: \"zone mail\",\n      type: \"text\",\n      value: client.mail,\n      onChange: this.change.bind(this, \"mail\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"TELEPHONE\"), React.createElement(\"input\", {\n      className: \"zone telephone\",\n      type: \"text\",\n      value: client.tel,\n      onChange: this.change.bind(this, \"tel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"saisie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"SOLDE\"), React.createElement(\"input\", {\n      className: \"zone solde\",\n      type: \"text\",\n      value: client.solde,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), this.afficherActions()), React.createElement(\"section\", {\n      className: \"transaction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"TRANSACTIONS\"), React.createElement(\"section\", {\n      className: \"tableau\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"colonne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"h3\", {\n      className: \"colonne bordure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Montant\"), React.createElement(\"section\", {\n      className: \"ligne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"23/09/2020\"), React.createElement(\"span\", {\n      className: \"montant bordure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"15\\u20AC\")), React.createElement(\"section\", {\n      className: \"ligne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"23/09/2020\"), React.createElement(\"span\", {\n      className: \"montant bordure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"15\\u20AC\")), React.createElement(\"section\", {\n      className: \"ligne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"23/09/2020\"), React.createElement(\"span\", {\n      className: \"montant bordure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"15\\u20AC\")))));\n  }\n\n}\n\nexport default InfosClient;","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/components/InfosClient.js"],"names":["React","client","Dbal","d","InfosClient","Component","constructor","props","state","update","listeClients","clients","setState","change","propriete","event","target","value","onChange","selectClient","nativeEvent","data","undefined","options","Array","from","list","children","forEach","option","c","JSON","parse","dataset","response","get","ville","nom","id","solde","clientSelect","setTimeout","reset","afficherActions","archive","bind","render","map","index","stringify","prenom","mail","tel"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport client from \"../metier/client\";\r\nimport Dbal from \"../modele/dbal\";\r\n\r\nconst d = new Dbal();\r\n\r\nclass InfosClient extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            update: 0,\r\n            listeClients: props.clients,\r\n            client: new client(null),\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.setState({\r\n            update: this.state.update + 1\r\n        })\r\n    }\r\n\r\n    change(propriete, event) {\r\n        const client = this.state.client;\r\n        client[propriete] = event.target.value;\r\n        this.setState({\r\n            client: client\r\n        });\r\n        this.props.onChange(client);\r\n    }\r\n\r\n    selectClient(event) {\r\n        if (event.nativeEvent.data === undefined) {\r\n            const options = Array.from(event.target.list.children);\r\n            options.forEach(async (option) => {\r\n                if (option.value === event.target.value) {\r\n                    let c = JSON.parse(option.dataset.client);\r\n                    let response = await d.get(\"http://localhost:8080\" + c.ville);\r\n                    c.ville = (JSON.parse(response)).nom;\r\n                    response = await d.get(\"http://localhost:8080/api/client/soldeById/\" + c.id);\r\n                    c.solde = JSON.parse(response);\r\n                    clientSelect = new client(clientSelect);\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            client: clientSelect\r\n                        });\r\n                        this.props.onChange(clientSelect);\r\n                    }, 1000);\r\n                }\r\n            });\r\n        } else {\r\n            const client = this.state.client;\r\n            client.nom = event.target.value;\r\n            this.setState({\r\n                client: client\r\n            });\r\n            this.props.onChange(client);\r\n        }\r\n        /*\r\n\r\nliste.push(new client({\r\n    \"id\": c.id,\r\n    \"nom\": c.nom,\r\n    \"prenom\": c.prenom,\r\n    \"ville\": ville.nom,\r\n    \"tel\": c.tel,\r\n    \"mail\": c.mail,\r\n    \"solde\": solde[0][1],\r\n    \"archive\": c.archive\r\n}));*/\r\n    }\r\n\r\n    reset() {\r\n        const c = new client(null);\r\n        this.setState({\r\n            client: c\r\n        });\r\n        this.props.onChange(c);\r\n    }\r\n\r\n    afficherActions() {\r\n        if (this.state.client.id !== \"\" && !this.state.client.archive) {\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\">MODIFIER</button>\r\n                    <button className=\"archiver\">ARCHIVER</button>\r\n                    <button className=\"nouveau\" onClick={this.reset.bind(this)}>NOUVEAU</button>\r\n                </section>\r\n            )\r\n        } else if (this.state.client.archive) {\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\">MODIFIER</button>\r\n                    <button className=\"desarchiver\">DESARCHIVER</button>\r\n                    <button className=\"nouveau\" onClick={this.reset.bind(this)}>NOUVEAU</button>\r\n                </section>\r\n            )\r\n        } else {\r\n            return (\r\n                <section className=\"actions\">\r\n                    <button className=\"editer\">CREER</button>\r\n                    <button className=\"archiver\" disabled>ARCHIVER</button>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.state.listeClients);\r\n        const client = this.state.client;\r\n        return (\r\n            <section className=\"selectionClient\">\r\n                <section className=\"client\">\r\n                    <h2 className=\"title\">CLIENTS</h2>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">NOM</legend>\r\n                        <input className=\"zone prenom\" type=\"text\" list=\"listeClient\" value={client.nom}\r\n                               onChange={this.selectClient.bind(this)}/>\r\n                        <datalist id=\"listeClient\">\r\n                            {this.state.listeClients.map((client, index) => {\r\n                                return (\r\n                                    <option key={index}\r\n                                            data-client={JSON.stringify(client)}>{client.nom + client.prenom}</option>\r\n                                )\r\n                            })}\r\n                        </datalist>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">PRENOM</legend>\r\n                        <input className=\"zone prenom\" type=\"text\" value={client.prenom}\r\n                               onChange={this.change.bind(this, \"prenom\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">VILLE</legend>\r\n                        <input className=\"zone ville\" type=\"text\" value={client.ville}\r\n                               onChange={this.change.bind(this, \"ville\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">E-MAIL</legend>\r\n                        <input className=\"zone mail\" type=\"text\" value={client.mail}\r\n                               onChange={this.change.bind(this, \"mail\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">TELEPHONE</legend>\r\n                        <input className=\"zone telephone\" type=\"text\" value={client.tel}\r\n                               onChange={this.change.bind(this, \"tel\")}/>\r\n                    </div>\r\n                    <div className=\"saisie\">\r\n                        <legend className=\"description\">SOLDE</legend>\r\n                        <input className=\"zone solde\" type=\"text\" value={client.solde} disabled/>\r\n                    </div>\r\n                    {this.afficherActions()}\r\n                </section>\r\n                <section className=\"transaction\">\r\n                    <h2 className=\"title\">TRANSACTIONS</h2>\r\n                    <section className=\"tableau\">\r\n                        <h3 className=\"colonne\">Date</h3>\r\n                        <h3 className=\"colonne bordure\">Montant</h3>\r\n                        <section className=\"ligne\">\r\n                            <span className=\"date\">23/09/2020</span>\r\n                            <span className=\"montant bordure\">15€</span>\r\n                        </section>\r\n                        <section className=\"ligne\">\r\n                            <span className=\"date\">23/09/2020</span>\r\n                            <span className=\"montant bordure\">15€</span>\r\n                        </section>\r\n                        <section className=\"ligne\">\r\n                            <span className=\"date\">23/09/2020</span>\r\n                            <span className=\"montant bordure\">15€</span>\r\n                        </section>\r\n                    </section>\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InfosClient;"]},"metadata":{},"sourceType":"module"}