{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\PPE2\\\\DeuxiemeSituation\\\\backend\\\\src\\\\components\\\\Transactions.js\";\nimport React from 'react';\nimport DetailsTransaction from \"./DetailsTransaction\";\nimport DaoSalle from \"../modele/DaoSalle\";\nimport DaoReservation from \"../modele/DaoReservation\";\nimport DaoObstacle from \"../modele/DaoObstacle\";\nimport DaoTheme from \"../modele/DaoTheme\";\nexport default class Transactions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transactions: null,\n      details: -1,\n      lastDetails: -1,\n      reservationDetailee: null\n    };\n  }\n\n  details(index) {\n    const transactions = this.props.transactions;\n\n    if (transactions[index].reservation !== \" \") {\n      if (this.state.details === index) {\n        this.setState({\n          lastDetails: this.state.details,\n          details: -1\n        });\n      } else {\n        this.setState({\n          details: index\n        });\n      }\n    }\n  }\n\n  async loadReservation() {\n    if (this.state.lastDetails !== this.state.details) {\n      document.body.style.cursor = 'progress';\n      const transaction = this.props.transactions[this.state.details];\n      const reservation = await new DaoReservation().getReservationByTransaction(transaction);\n      const salle = await new DaoSalle().getSalleByReservation(reservation);\n      const obstacle = await new DaoObstacle().getObstacleByReservation(reservation);\n      const theme = await new DaoTheme().getThemeBySalle(salle);\n      const resaDetail = [reservation, salle, theme, obstacle];\n      this.setState({\n        reservationDetailee: resaDetail\n      });\n      document.body.style.cursor = 'default';\n      return resaDetail;\n    } else {\n      return this.state.reservationDetailee;\n    }\n  }\n\n  afficherDetails() {\n    if (this.state.details > -1) {\n      let reservationDetaille = this.loadReservation();\n      return React.createElement(DetailsTransaction, {\n        reservationDetailee: reservationDetaille,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const transactions = this.props.transactions;\n\n    if (this.state.transaction && transactions[0].id !== this.state.transaction[0].id) {\n      this.state.details = -1;\n      this.state.lastDetails = -1;\n    }\n\n    console.log(this.state.details);\n    const options = {\n      weekday: \"short\",\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\"\n    };\n\n    if (transactions.length > 0) {\n      return React.createElement(\"section\", {\n        className: \"transactions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"TRANSACTIONS\"), React.createElement(\"section\", {\n        className: \"tableau\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"colonne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"h3\", {\n        className: \"colonne bordure\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Montant\"), transactions.map((t, i) => {\n        const date = new Intl.DateTimeFormat(\"fr-FR\", options).format(t.date);\n\n        if (transactions[i].reservation !== \" \") {\n          const selected = this.state.details === i;\n          return React.createElement(\"section\", {\n            className: \"ligne depense \" + selected,\n            key: i,\n            onClick: this.details.bind(this, i),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"date\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, date.toUpperCase()), React.createElement(\"span\", {\n            className: \"montant bordure\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, t.montant));\n        } else {\n          return React.createElement(\"section\", {\n            className: \"ligne ajout\",\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"date\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, date.toUpperCase()), React.createElement(\"span\", {\n            className: \"montant bordure\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, t.montant));\n        }\n      })), this.afficherDetails());\n    } else {\n      return null;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/wamp64/www/PPE2/DeuxiemeSituation/backend/src/components/Transactions.js"],"names":["React","DetailsTransaction","DaoSalle","DaoReservation","DaoObstacle","DaoTheme","Transactions","Component","constructor","props","state","transactions","details","lastDetails","reservationDetailee","index","reservation","setState","loadReservation","document","body","style","cursor","transaction","getReservationByTransaction","salle","getSalleByReservation","obstacle","getObstacleByReservation","theme","getThemeBySalle","resaDetail","afficherDetails","reservationDetaille","render","id","console","log","options","weekday","day","month","year","length","map","t","i","date","Intl","DateTimeFormat","format","selected","bind","toUpperCase","montant"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DetailsTransaction from \"./DetailsTransaction\";\r\nimport DaoSalle from \"../modele/DaoSalle\";\r\nimport DaoReservation from \"../modele/DaoReservation\";\r\nimport DaoObstacle from \"../modele/DaoObstacle\";\r\nimport DaoTheme from \"../modele/DaoTheme\";\r\n\r\nexport default class Transactions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transactions: null,\r\n            details: -1,\r\n            lastDetails: -1,\r\n            reservationDetailee: null\r\n        }\r\n    }\r\n\r\n    details(index){\r\n        const transactions = this.props.transactions;\r\n        if (transactions[index].reservation !== \" \"){\r\n            if (this.state.details === index){\r\n                this.setState({\r\n                    lastDetails: this.state.details,\r\n                    details: -1\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    details: index,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadReservation(){\r\n        if (this.state.lastDetails !== this.state.details) {\r\n            document.body.style.cursor = 'progress';\r\n            const transaction = this.props.transactions[this.state.details];\r\n            const reservation = await new DaoReservation().getReservationByTransaction(transaction);\r\n            const salle = await new DaoSalle().getSalleByReservation(reservation);\r\n            const obstacle = await new DaoObstacle().getObstacleByReservation(reservation);\r\n            const theme = await new DaoTheme().getThemeBySalle(salle);\r\n            const resaDetail = [reservation, salle, theme, obstacle];\r\n            this.setState({\r\n                reservationDetailee: resaDetail,\r\n            });\r\n            document.body.style.cursor = 'default';\r\n            return resaDetail;\r\n        } else{\r\n            return  this.state.reservationDetailee;\r\n        }\r\n    }\r\n\r\n    afficherDetails(){\r\n        if (this.state.details > -1) {\r\n            let reservationDetaille = this.loadReservation();\r\n            return <DetailsTransaction reservationDetailee={reservationDetaille}/>\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const transactions = this.props.transactions;\r\n        if (this.state.transaction && transactions[0].id !== this.state.transaction[0].id){\r\n            this.state.details = -1;\r\n            this.state.lastDetails = -1;\r\n        }\r\n        console.log(this.state.details);\r\n        const options = {weekday: \"short\",day: \"numeric\", month: \"short\", year: \"numeric\"};\r\n        if (transactions.length > 0){\r\n            return (\r\n                <section className=\"transactions\">\r\n                    <h2 className=\"title\">TRANSACTIONS</h2>\r\n                    <section className=\"tableau\">\r\n                        <h3 className=\"colonne\">Date</h3>\r\n                        <h3 className=\"colonne bordure\">Montant</h3>\r\n                        {transactions.map((t, i)=>{\r\n                            const date = new Intl.DateTimeFormat(\"fr-FR\", options).format(t.date);\r\n                            if(transactions[i].reservation !== \" \"){\r\n                                const selected = (this.state.details === i);\r\n                                return (\r\n                                    <section className={\"ligne depense \" + selected} key={i} onClick={this.details.bind(this, i)}>\r\n                                        <span className=\"date\">{date.toUpperCase()}</span>\r\n                                        <span className=\"montant bordure\">{t.montant}</span>\r\n                                    </section>\r\n                                )\r\n                            } else {\r\n                                return (\r\n                                    <section className={\"ligne ajout\"} key={i}>\r\n                                        <span className=\"date\">{date.toUpperCase()}</span>\r\n                                        <span className=\"montant bordure\">{t.montant}</span>\r\n                                    </section>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </section>\r\n                    {this.afficherDetails()}\r\n                </section>\r\n            );\r\n        } else{\r\n            return null;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}