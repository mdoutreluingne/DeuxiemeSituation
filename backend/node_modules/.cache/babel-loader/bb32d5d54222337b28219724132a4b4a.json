{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\xampp\\\\htdocs\\\\DeuxiemeSituation\\\\backend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\xampp\\\\htdocs\\\\DeuxiemeSituation\\\\backend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:\\\\xampp\\\\htdocs\\\\DeuxiemeSituation\\\\backend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\xampp\\\\htdocs\\\\DeuxiemeSituation\\\\backend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import Dbal from\"./Dbal\";import Transaction from\"../metier/Transaction\";var DaoTransaction=/*#__PURE__*/function(){/**\r\n     * Singleton\r\n     * @returns {DaoTransaction}\r\n     */function DaoTransaction(){_classCallCheck(this,DaoTransaction);if(!!DaoTransaction.instance){return DaoTransaction.instance;}/**@type {DaoTransaction}**/DaoTransaction.instance=this;/**@type {Dbal}**/this.dbal=new Dbal();return this;}/**\r\n     * Récupère les transaction d'un client\r\n     * @param id {number}\r\n     * @returns {Promise<[]>}\r\n     */_createClass(DaoTransaction,[{key:\"getAllByClientId\",value:function(){var _getAllByClientId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var liste,reponse,transactions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:liste=[];_context.next=3;return this.dbal.get(\"/api/transaction/byIdClient/\"+id);case 3:reponse=_context.sent;transactions=JSON.parse(reponse);transactions.forEach(function(t){liste.push(new Transaction(t));});return _context.abrupt(\"return\",liste);case 7:case\"end\":return _context.stop();}}},_callee,this);}));function getAllByClientId(_x){return _getAllByClientId.apply(this,arguments);}return getAllByClientId;}()/**\r\n     * Ajoute la transaction de bienvenue\r\n     * @param client {Client}\r\n     * @returns {Promise<string>}\r\n     */},{key:\"initialiser\",value:function(){var _initialiser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(client){var aujourdhui,url,params;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:aujourdhui=this.dbal.date2amd(new Date());url=\"/api/transaction/addTransaction/\";params='{\"date\":\"'+aujourdhui+'\",\"montant\":\"0,00\",\"type\":\"Carte Bancaire\",\"numero\":\" \",\"commentaire\":\"Création du compte\",\"reservation\":\" \",\"client\":\"'+client.id+'\"}';_context2.next=5;return this.dbal.post(url,params);case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2,this);}));function initialiser(_x2){return _initialiser.apply(this,arguments);}return initialiser;}()/**\r\n     * Ajoute une transaction\r\n     * @param client {Client}\r\n     * @param transaction {Transaction}\r\n     * @returns {Promise<*>}\r\n     */},{key:\"ajouter\",value:function(){var _ajouter=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(client,transaction){var aujourdhui,url,params;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:aujourdhui=this.dbal.date2amd(new Date());url=\"/api/transaction/addTransaction/\";params='{\"date\":\"'+aujourdhui+'\",\"montant\":\"'+transaction.montant+'\",\"type\":\"'+transaction.type+'\",\"numero\":\"'+transaction.numero+'\",\"commentaire\":\"'+transaction.commentaire+'\",\"reservation\":\" \",\"client\":\"'+client.id+'\"}';_context3.next=5;return this.dbal.post(url,params);case 5:client.solde=parseFloat(client.solde)+parseFloat(transaction.montant);return _context3.abrupt(\"return\",client);case 7:case\"end\":return _context3.stop();}}},_callee3,this);}));function ajouter(_x3,_x4){return _ajouter.apply(this,arguments);}return ajouter;}()}]);return DaoTransaction;}();export{DaoTransaction as default};","map":{"version":3,"sources":["C:/xampp/htdocs/DeuxiemeSituation/backend/src/modele/DaoTransaction.js"],"names":["Dbal","Transaction","DaoTransaction","instance","dbal","id","liste","get","reponse","transactions","JSON","parse","forEach","t","push","client","aujourdhui","date2amd","Date","url","params","post","transaction","montant","type","numero","commentaire","solde","parseFloat"],"mappings":"ugBAAA,MAAOA,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,C,GAEqBC,CAAAA,c,yBACjB;;;OAIA,yBAAc,sCACV,GAAI,CAAC,CAACA,cAAc,CAACC,QAArB,CAA+B,CAC3B,MAAOD,CAAAA,cAAc,CAACC,QAAtB,CACH,CACD,4BACAD,cAAc,CAACC,QAAf,CAA0B,IAA1B,CACA,kBACA,KAAKC,IAAL,CAAY,GAAIJ,CAAAA,IAAJ,EAAZ,CACA,MAAO,KAAP,CACH,CAED;;;;4KAKuBK,E,iJACbC,K,CAAQ,E,uBACQ,MAAKF,IAAL,CAAUG,GAAV,CAAc,+BAAiCF,EAA/C,C,QAAhBG,O,eACAC,Y,CAAgBC,IAAI,CAACC,KAAL,CAAWH,OAAX,C,CACtBC,YAAY,CAACG,OAAb,CAAqB,SAACC,CAAD,CAAK,CACtBP,KAAK,CAACQ,IAAN,CAAW,GAAIb,CAAAA,WAAJ,CAAgBY,CAAhB,CAAX,EACH,CAFD,E,gCAGOP,K,yKAGX;;;;wIAKkBS,M,gJACRC,U,CAAa,KAAKZ,IAAL,CAAUa,QAAV,CAAmB,GAAIC,CAAAA,IAAJ,EAAnB,C,CACbC,G,CAAM,kC,CACNC,M,CAAS,YAAYJ,UAAZ,CAAuB,yHAAvB,CAAiJD,MAAM,CAACV,EAAxJ,CAA2J,I,wBAC7J,MAAKD,IAAL,CAAUiB,IAAV,CAAeF,GAAf,CAAoBC,MAApB,C,oNAGjB;;;;;gIAMcL,M,CAAQO,W,gJACZN,U,CAAa,KAAKZ,IAAL,CAAUa,QAAV,CAAmB,GAAIC,CAAAA,IAAJ,EAAnB,C,CACbC,G,CAAM,kC,CACNC,M,CAAS,YAAYJ,UAAZ,CAAuB,eAAvB,CAAuCM,WAAW,CAACC,OAAnD,CAA2D,YAA3D,CAAwED,WAAW,CAACE,IAApF,CAAyF,cAAzF,CAAwGF,WAAW,CAACG,MAApH,CAA2H,mBAA3H,CAA+IH,WAAW,CAACI,WAA3J,CAAuK,gCAAvK,CAAwMX,MAAM,CAACV,EAA/M,CAAkN,I,wBAC3N,MAAKD,IAAL,CAAUiB,IAAV,CAAeF,GAAf,CAAoBC,MAApB,C,QACNL,MAAM,CAACY,KAAP,CAAeC,UAAU,CAACb,MAAM,CAACY,KAAR,CAAV,CAA2BC,UAAU,CAACN,WAAW,CAACC,OAAb,CAApD,C,iCACOR,M,0LAvDMb,c","sourcesContent":["import Dbal from \"./Dbal\";\r\nimport Transaction from \"../metier/Transaction\";\r\n\r\nexport default class DaoTransaction {\r\n    /**\r\n     * Singleton\r\n     * @returns {DaoTransaction}\r\n     */\r\n    constructor() {\r\n        if (!!DaoTransaction.instance) {\r\n            return DaoTransaction.instance;\r\n        }\r\n        /**@type {DaoTransaction}**/\r\n        DaoTransaction.instance = this;\r\n        /**@type {Dbal}**/\r\n        this.dbal = new Dbal();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Récupère les transaction d'un client\r\n     * @param id {number}\r\n     * @returns {Promise<[]>}\r\n     */\r\n    async getAllByClientId(id){\r\n        const liste = [];\r\n        const reponse = await this.dbal.get(\"/api/transaction/byIdClient/\" + id);\r\n        const transactions = (JSON.parse(reponse));\r\n        transactions.forEach((t)=>{\r\n            liste.push(new Transaction(t))\r\n        });\r\n        return liste;\r\n    }\r\n\r\n    /**\r\n     * Ajoute la transaction de bienvenue\r\n     * @param client {Client}\r\n     * @returns {Promise<string>}\r\n     */\r\n    async initialiser(client){\r\n        const aujourdhui = this.dbal.date2amd(new Date());\r\n        const url = \"/api/transaction/addTransaction/\";\r\n        const params = '{\"date\":\"'+aujourdhui+'\",\"montant\":\"0,00\",\"type\":\"Carte Bancaire\",\"numero\":\" \",\"commentaire\":\"Création du compte\",\"reservation\":\" \",\"client\":\"'+client.id+'\"}';\r\n        return await this.dbal.post(url, params);\r\n    }\r\n\r\n    /**\r\n     * Ajoute une transaction\r\n     * @param client {Client}\r\n     * @param transaction {Transaction}\r\n     * @returns {Promise<*>}\r\n     */\r\n    async ajouter(client, transaction){\r\n        const aujourdhui = this.dbal.date2amd(new Date());\r\n        const url = \"/api/transaction/addTransaction/\";\r\n        const params = '{\"date\":\"'+aujourdhui+'\",\"montant\":\"'+transaction.montant+'\",\"type\":\"'+transaction.type+'\",\"numero\":\"'+transaction.numero+'\",\"commentaire\":\"'+transaction.commentaire+'\",\"reservation\":\" \",\"client\":\"'+client.id+'\"}';\r\n        await this.dbal.post(url, params);\r\n        client.solde = parseFloat(client.solde) + parseFloat(transaction.montant);\r\n        return client;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}